import logging
import simplejson as json
import uuid

from django.core.management.base import BaseCommand, CommandError
from django.db.models import F, Q
from django.db.utils import IntegrityError

from project.shortcuts import datetime_localize_or_utc, timezone_now
from project.urlify import urlify

from bezantrakta.event.cache import get_or_set_cache as get_or_set_event_cache
from bezantrakta.event.models import Event, EventGroupBinder

from third_party.ticket_service.cache import get_or_set_cache as get_or_set_ticket_service_cache
from third_party.ticket_service.cache import ticket_service_instance
from third_party.ticket_service.models import TicketService, TicketServiceSchemeVenueBinder


class Command(BaseCommand):
    """–ó–∞–¥–∞–Ω–∏–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫ —Å–∞–π—Ç–∞–º —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤.

    –ü–æ–∏—Å–∫ –∑–∞–ª–æ–≤, –≥—Ä—É–ø–ø –∏ —Å–æ–±—ã—Ç–∏–π –≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫ —Å–∞–π—Ç–∞–º –±–∏–ª–µ—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö.
    –ó–∞–ø–∏—Å—å –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    –ü–æ–ª—É—á–∞–µ–º –∏–∑ –ë–î —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫ —Ä–∞–∑–Ω—ã–º —Å–∞–π—Ç–∞–º.

    –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ (–°–ü–ë) –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:

    1) –ò–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –°–ü–ë, –∏—Å–ø–æ–ª—å–∑—É—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫–∏.

    2) –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –≤ –ë–î —Å–ø–∏—Å–∫–∞ –∑–∞–ª–æ–≤ –°–ü–ë —Å –ø–æ–º–æ—â—å—é ``discover_schemes``.

    3) –í –º–æ–¥–µ–ª—å ``TicketServiceSchemeVenueBinder`` –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è:

    * –ª–∏–±–æ –≤—Å–µ –∑–∞–ª—ã –°–ü–ë,

    * –ª–∏–±–æ —Ç–æ–ª—å–∫–æ –∑–∞–ª—ã, ID –∫–æ—Ç–æ—Ä—ã—Ö —É–∫–∞–∑–∞–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –°–ü–ë –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ ``schemes``.

    4) –ü–æ–ª—É—á–µ–Ω–∏–µ –≥—Ä—É–ø–ø/—Å–æ–±—ã—Ç–∏–π –°–ü–ë —Å –ø–æ–º–æ—â—å—é ``discover_groups``/``discover_events``
    –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö –∑–∞–ª–æ–≤ –°–ü–ë, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    –±—ã–ª–∏ —Å–≤—è–∑–∞–Ω—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –≤—Ä—É—á–Ω—É—é –∑–∞–ª–∞–º–∏ –≤ –º–æ–¥–µ–ª–∏ ``event.EventVenue``.

    5) –í –ë–î —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –≥—Ä—É–ø–ø—ã —Å–æ–±—ã—Ç–∏–π.
    –£ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è –∏–∑ —Å–∞–º–æ–≥–æ —Ä–∞–Ω–Ω–µ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è.

    6) –í –ë–î —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è.
    –£ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è.

    7) –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ –≥—Ä—É–ø–ø—É, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –∏–ª–∏ —É–∂–µ –∏–º–µ—é—â—É—é—Å—è,
    —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç—Å—è –∫ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ –≤ self-M2M-–º–æ–¥–µ–ª–∏ ``event.EventGroupBinder``.

    –ó–∞–¥–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –≤ cron —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é:

    ``***** source {venv/biv/activate} && python {–∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞}/manage.py ts_discover``
    """
    help = """
–ü–æ–∏—Å–∫ –∑–∞–ª–æ–≤, –≥—Ä—É–ø–ø –∏ —Å–æ–±—ã—Ç–∏–π –≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫ —Å–∞–π—Ç–∞–º –±–∏–ª–µ—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö._______
–ó–∞–ø–∏—Å—å –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.___________
–ü–æ–ª—É—á–∞–µ–º –∏–∑ –ë–î —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫ —Ä–∞–∑–Ω—ã–º —Å–∞–π—Ç–∞–º.__
–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ (–°–ü–ë) –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ:__
1) –ò–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –°–ü–ë, –∏—Å–ø–æ–ª—å–∑—É—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫–∏.__________
2) –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –≤ –ë–î —Å–ø–∏—Å–∫–∞ –∑–∞–ª–æ–≤ –°–ü–ë —Å –ø–æ–º–æ—â—å—é `discover_schemes`._____
3) –í –º–æ–¥–µ–ª—å `TicketServiceSchemeVenueBinder` –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è:__________________________
__ –ª–∏–±–æ –≤—Å–µ –∑–∞–ª—ã –°–ü–ë,_________________________________________________________
__ –ª–∏–±–æ —Ç–æ–ª—å–∫–æ –∑–∞–ª—ã, ID –∫–æ—Ç–æ—Ä—ã—Ö —É–∫–∞–∑–∞–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –°–ü–ë –≤ —Å–≤–æ–π—Å—Ç–≤–µ `schemes`.
4) –ü–æ–ª—É—á–µ–Ω–∏–µ –≥—Ä—É–ø–ø/—Å–æ–±—ã—Ç–∏–π –°–ü–ë —Å –ø–æ–º–æ—â—å—é `discover_groups`/`discover_events`__
–ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö –∑–∞–ª–æ–≤ –°–ü–ë, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏____
–±—ã–ª–∏ —Å–≤—è–∑–∞–Ω—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –≤—Ä—É—á–Ω—É—é –∑–∞–ª–∞–º–∏ –≤ –º–æ–¥–µ–ª–∏ `EventVenue`._
5) –í –ë–î —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –≥—Ä—É–ø–ø—ã —Å–æ–±—ã—Ç–∏–π._____________________________________
–£ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è –∏–∑ —Å–∞–º–æ–≥–æ —Ä–∞–Ω–Ω–µ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è._
6) –í –ë–î —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è.____________________________________________
–£ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –¥–∞—Ç–∞/–≤—Ä–µ–º—è._______________________________________
7) –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ –≥—Ä—É–ø–ø—É, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –∏–ª–∏ —É–∂–µ –∏–º–µ—é—â—É—é—Å—è,_______________
—Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç—Å—è –∫ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ –≤ self-M2M-–º–æ–¥–µ–ª–∏ `EventGroupBinder`._____
______________________________________________________________________________
–ó–∞–¥–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –≤ cron —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é:______________
***** source {venv/biv/activate} && python {–∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞}/manage.py command
    """
    logger = logging.getLogger('ticket_service.discover')

    def log(self, msg, level=None):
        if level is None:
            self.stdout.write(msg)
            self.logger.info(msg)
        else:
            if level == 'INFO':
                self.stdout.write(self.style.WARNING(msg))
                self.logger.info('[INFO] {}'.format(msg))
            elif level == 'SUCCESS':
                self.stdout.write(self.style.SUCCESS(msg))
                self.logger.info('[SUCCESS] {}'.format(msg))
            elif level == 'NOTICE':
                self.stdout.write(self.style.NOTICE(msg))
                self.logger.error('[NOTICE] {}'.format(msg))
            elif level == 'ERROR':
                self.stdout.write(self.style.ERROR(msg))
                self.logger.critical('[ERROR] {}'.format(msg))

    def handle(self, *args, **options):
        now = timezone_now()

        self.logger.info('\n--------------------------------------------------')
        self.logger.info('{:%Y-%m-%d %H:%M:%S}'.format(now))
        self.stdout.write('–ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤...')

        active_ticket_services = list(
            TicketService.objects.select_related(
                'domain',
            ).annotate(
                city_state=F('domain__city__state'),
                city_timezone=F('domain__city__timezone'),
            ).values(
                'id',
                'city_state',
                'city_timezone',
            ).filter(
                Q(is_active=True),
                Q(city_state=True) | Q(city_state=None),
            )
        )

        if len(active_ticket_services) > 0:
            self.log(
                '–ù–∞–π–¥–µ–Ω–æ {n} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤.\n'.format(n=len(active_ticket_services)),
                level='INFO'
            )

            for ats in active_ticket_services:
                ticket_service = get_or_set_ticket_service_cache(ats['id'])

                current_timezone = ats['city_timezone']

                # –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–∞–π—Ç–∞
                ts = ticket_service_instance(ats['id'])
                self.log('{ico} {title}'.format(ico='üé´', title=ticket_service['title']), level='INFO')
                self.log('–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {tz}'.format(tz=current_timezone))

                # –ó–∞–ª—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
                self.stdout.write('–ü–æ–∏—Å–∫ –∑–∞–ª–æ–≤ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤...')
                schemes = ts.discover_schemes()
                self.stdout.write('–ù–∞–π–¥–µ–Ω–æ {n} —Å—Ö–µ–º –∑–∞–ª–æ–≤ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤'.format(n=len(schemes[0])))

                # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ —Ç–æ–ª—å–∫–æ —Ç–µ –µ–≥–æ –∑–∞–ª—ã,
                # –∫–æ—Ç–æ—Ä—ã–µ —è–≤–Ω–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –∏–º–µ–Ω–Ω–æ –∫ —ç—Ç–æ–º—É —Å–∞–π—Ç—É –≤ —ç—Ç–æ–º –≥–æ—Ä–æ–¥–µ
                # (–¥–ª—è shared-–±–∏–ª–µ—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –º–µ–∂–¥—É –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–∞–π—Ç–∞–º–∏).
                schemes_inclusion_list = (
                    ticket_service['settings']['schemes'] if
                    'schemes' in ticket_service['settings'] and
                    type(ticket_service['settings']['schemes']) is list and
                    len(ticket_service['settings']['schemes']) > 0 else
                    None
                )
                if schemes_inclusion_list is None:
                    self.stdout.write('–ò–∑ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –í–°–ï –∑–∞–ª—ã')
                else:
                    self.stdout.write('–ò–∑ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∑–∞–ª—ã {vil}'.format(
                        vil=schemes_inclusion_list)
                    )

                # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ `schemes` –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
                # –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ - –Ω–µ–ø—É—Å—Ç–æ–π.
                # –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤ –ë–î —Å–∞–π—Ç–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤—Å–µ –∑–∞–ª—ã –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤.
                for s in schemes:
                    if (
                        schemes_inclusion_list is None or
                        (
                            schemes_inclusion_list is not None and
                            s['scheme_id'] in schemes_inclusion_list
                        )
                    ):
                        try:
                            TicketServiceSchemeVenueBinder.objects.create(
                                ticket_service_id=ticket_service['id'],
                                ticket_service_scheme_id=s['scheme_id'],
                                ticket_service_scheme_title=s['scheme_title'],
                            )
                        except IntegrityError:
                            pass
                        else:
                            self.log(
                                '–î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–≤—è–∑–∫–∞ —Å–æ —Å—Ö–µ–º–æ–π –∑–∞–ª–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ {id}: {title}'.format(
                                    id=s['scheme_id'],
                                    title=s['scheme_title']
                                ), level='SUCCESS'
                            )

                # –°—Ö–µ–º—ã –∑–∞–ª–æ–≤ –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ —Å –∑–∞–ª–∞–º–∏ –≤ –º–æ–¥–µ–ª–∏ ``event.EventVenue``
                ts_scheme_venue_binder = dict(TicketServiceSchemeVenueBinder.objects.filter(
                    ticket_service_id=ticket_service['id'],
                    ticket_service__domain_id=ticket_service['domain_id'],
                    event_venue__isnull=False,
                ).values_list(
                    'ticket_service_scheme_id',
                    'event_venue_id',
                ))

                # –ì—Ä—É–ø–ø—ã –∏ —Å–æ–±—ã—Ç–∏—è –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –∑–∞—Ä–∞—à–∏–≤–∞—é—Ç—Å—è,
                # —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö –∑–∞–ª—ã –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ —Å–≤—è–∑–∞–Ω—ã —Å –∑–∞–ª–∞–º–∏ –≤ –ë–î
                if len(ts_scheme_venue_binder) > 0:
                    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø –≤ –ë–î
                    self.stdout.write('–ò–º–µ—é—Ç—Å—è —Å–≤—è–∑–∫–∏ –∑–∞–ª–æ–≤ —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤.')

                    # –ì—Ä—É–ø–ø—ã, —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –ë–î —Ä–∞–Ω–µ–µ, –∫ –∫–æ—Ç–æ—Ä—ã–º –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω—ã –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
                    groups_exist = Event.objects.filter(
                        is_group=True,
                        domain_id=ticket_service['domain_id'],
                        ticket_service_id=ticket_service['id'],
                    ).values(
                        'id',
                        'ticket_service_event',
                    )
                    group_id_uuid_mapping = {ge['ticket_service_event']: ge['id'] for ge in groups_exist}
                    self.stdout.write('–ò–º–µ—é—â–∏–µ—Å—è –≥—Ä—É–ø–ø—ã —Å–æ–±—ã—Ç–∏–π: {}'.format(group_id_uuid_mapping))

                    # –°–æ–±—ã—Ç–∏—è, —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –ë–î —Ä–∞–Ω–µ–µ
                    events_exist = Event.objects.filter(
                        is_group=False,
                        domain_id=ticket_service['domain_id'],
                        ticket_service_id=ticket_service['id'],
                    ).values(
                        'id',
                        'ticket_service_event',
                    )
                    events_id_uuid_mapping = {ee['ticket_service_event']: ee['id'] for ee in events_exist}
                    self.stdout.write('–ò–º–µ—é—â–∏–µ—Å—è —Å–æ–±—ã—Ç–∏—è: {}'.format(events_id_uuid_mapping))

                    self.stdout.write('–ü–æ–∏—Å–∫ –≥—Ä—É–ø–ø —Å–æ–±—ã—Ç–∏–π...')
                    groups = ts.discover_groups()

                    self.stdout.write('–ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π...')
                    events = ts.discover_events()

                    if groups is not None and len(groups) > 0:
                        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø –≤ –ë–î

                        # –í –ë–î —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ –≥—Ä—É–ø–ø—ã,
                        # –∑–∞–ª—ã –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ —É –∫–æ—Ç–æ—Ä—ã—Ö —Å–≤—è–∑–∞–Ω—ã —Å –∑–∞–ª–∞–º–∏ –≤ –ë–î.
                        for g in groups:
                            if g['scheme_id'] in ts_scheme_venue_binder.keys():
                                # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –ë–î –≤ UTC)
                                g['group_datetime'] = datetime_localize_or_utc(g['group_datetime'], current_timezone)
                                group_uuid = uuid.uuid4()
                                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ –ø—Å–µ–≤–¥–æ–Ω–∏–º—É –≥—Ä—É–ø–ø—ã –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
                                slug_num_chars = 64 - (len(str(g['group_id'])) + 1)
                                group_slug = '{title}-{id}'.format(
                                    title=urlify(g['group_title'], num_chars=slug_num_chars),
                                    id=g['group_id'],
                                )

                                # –ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ —Å–æ–±—ã—Ç–∏–π —É–∂–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–∞–Ω–µ–µ
                                if g['group_id'] in group_id_uuid_mapping.keys():
                                    self.stdout.write(
                                        '–ì—Ä—É–ø–ø–∞ —Å–æ–±—ã—Ç–∏–π {gid} –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–∞–Ω–µ–µ'.format(gid=g['group_id'])
                                    )
                                    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π —Ä–∞–Ω–µ–µ –≥—Ä—É–ø–ø–µ —Å–æ–±—ã—Ç–∏–π
                                    Event.objects.filter(
                                        id=group_id_uuid_mapping[g['group_id']]
                                    ).update(
                                        datetime=g['group_datetime']
                                    )
                                else:
                                    try:
                                        Event.objects.create(
                                            id=group_uuid,
                                            title=g['group_title'],
                                            slug=group_slug,
                                            description='',
                                            keywords='',
                                            text=g['group_text'],
                                            is_published=False,
                                            is_on_index=False,
                                            min_price=g['group_min_price'],
                                            datetime=g['group_datetime'],
                                            event_venue_id=ts_scheme_venue_binder[g['scheme_id']],
                                            domain_id=ticket_service['domain_id'],
                                            is_group=True,
                                            ticket_service_id=ticket_service['id'],
                                            ticket_service_event=g['group_id'],
                                            ticket_service_prices=None,
                                            ticket_service_scheme=None,
                                        )
                                    except IntegrityError:
                                        pass
                                    else:
                                        self.log(
                                            '–î–æ–±–∞–≤–ª–µ–Ω–∞ –≥—Ä—É–ø–ø–∞ —Å–æ–±—ã—Ç–∏–π {id}: {title}'.format(
                                                id=g['group_id'],
                                                title=g['group_title']
                                            ), level='SUCCESS'
                                        )
                                        group_id_uuid_mapping[g['group_id']] = group_uuid

                        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –≤ –ë–î
                        if events is None and len(events) > 0:
                            self.log('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è.', level='NOTICE')
                        else:
                            for e in events:
                                # –í –ë–î —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ —Å–æ–±—ã—Ç–∏—è,
                                # –∑–∞–ª—ã –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ —É –∫–æ—Ç–æ—Ä—ã—Ö —Å–≤—è–∑–∞–Ω—ã —Å –∑–∞–ª–∞–º–∏ –≤ –ë–î.
                                if e['scheme_id'] in ts_scheme_venue_binder.keys():
                                    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –ë–î –≤ UTC)
                                    e['event_datetime'] = datetime_localize_or_utc(
                                        e['event_datetime'], current_timezone
                                    )
                                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ –ø—Å–µ–≤–¥–æ–Ω–∏–º—É —Å–æ–±—ã—Ç–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
                                    slug_num_chars = 64 - (len(str(e['event_id'])) + 1)
                                    event_slug = '{title}-{id}'.format(
                                        title=urlify(e['event_title'], num_chars=slug_num_chars),
                                        id=e['event_id'],
                                    )
                                    # –°–ø–∏—Å–æ–∫ —Ü–µ–Ω –Ω–∞ –±–∏–ª–µ—Ç—ã –¥–ª—è –ª–µ–≥–µ–Ω–¥—ã —Å—Ö–µ–º—ã –∑–∞–ª–∞
                                    prices = ts.prices(event_id=e['event_id'])
                                    # –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–∞ –±–∏–ª–µ—Ç –±–µ—Ä—ë—Ç—Å—è –∏–∑ —Å–ø–∏—Å–∫–∞ —Ü–µ–Ω
                                    e['event_min_price'] = (
                                        prices[0] if
                                        e['event_min_price'] == 0 and len(prices) > 0 else
                                        0
                                    )

                                    # –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ —É–∂–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ
                                    if e['event_id'] in events_id_uuid_mapping.keys():
                                        event_uuid = events_id_uuid_mapping[e['event_id']]
                                        self.stdout.write(
                                            '–°–æ–±—ã—Ç–∏–µ {eid} –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ'.format(eid=e['event_id'])
                                        )
                                        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–º —Ä–∞–Ω–µ–µ —Å–æ–±—ã—Ç–∏–∏
                                        Event.objects.filter(
                                            id=events_id_uuid_mapping[e['event_id']]
                                        ).update(
                                            datetime=e['event_datetime'],
                                        )
                                    else:
                                        event_uuid = uuid.uuid4()
                                        try:
                                            Event.objects.create(
                                                id=event_uuid,
                                                title=e['event_title'],
                                                slug=event_slug,
                                                description='',
                                                keywords='',
                                                text=e['event_text'],
                                                is_published=False,
                                                is_on_index=False,
                                                min_price=e['event_min_price'],
                                                min_age=e['event_min_age'],
                                                datetime=e['event_datetime'],
                                                event_venue_id=ts_scheme_venue_binder[e['scheme_id']],
                                                domain_id=ticket_service['domain_id'],
                                                is_group=False,
                                                ticket_service_id=ticket_service['id'],
                                                ticket_service_event=e['event_id'],
                                                ticket_service_prices=json.dumps(prices),
                                                ticket_service_scheme=e['scheme_id'],
                                            )
                                        except IntegrityError:
                                            pass
                                        else:
                                            self.log(
                                                '–î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ {id}: {title}'.format(
                                                    id=e['event_id'],
                                                    title=e['event_title']
                                                ), level='SUCCESS'
                                            )

                                        # –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ä–∞–Ω–µ–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ -
                                        # —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç—Å—è –∫ –≥—Ä—É–ø–ø–µ –≤ –ë–î
                                        if e['group_id'] in group_id_uuid_mapping.keys():
                                            try:
                                                EventGroupBinder.objects.create(
                                                    group_id=group_id_uuid_mapping[e['group_id']],
                                                    event_id=event_uuid,
                                                )
                                            except IntegrityError:
                                                pass
                                            else:
                                                self.log(
                                                    '–°–æ–±—ã—Ç–∏–µ {event_id}: {event_title} –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ –≥—Ä—É–ø–ø–µ {group_id}: {group_title}'.format(
                                                            event_id=e['event_id'],
                                                            event_title=e['event_title'],
                                                            group_id=g['group_id'],
                                                            group_title=g['group_title']
                                                    ), level='SUCCESS'
                                                )
                                    # –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫—ç—à —Å–æ–±—ã—Ç–∏—è
                                    get_or_set_event_cache(event_uuid, reset=True)
                                    self.stdout.write(
                                        '–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω –∫—ç—à —Å–æ–±—ã—Ç–∏—è {eid}'.format(eid=e['event_id'])
                                    )
                    else:
                        self.log('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã —Å–æ–±—ã—Ç–∏–π.', level='NOTICE')

                        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –≤ –ë–î
                        if events is None and len(events) > 0:
                            self.log('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è.', level='NOTICE')
                        else:
                            for e in events:
                                # –í –ë–î —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ —Å–æ–±—ã—Ç–∏—è,
                                # –∑–∞–ª—ã –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ —É –∫–æ—Ç–æ—Ä—ã—Ö —Å–≤—è–∑–∞–Ω—ã —Å –∑–∞–ª–∞–º–∏ –≤ –ë–î.
                                if e['scheme_id'] in ts_scheme_venue_binder.keys():
                                    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –ë–î –≤ UTC)
                                    e['event_datetime'] = datetime_localize_or_utc(
                                        e['event_datetime'], current_timezone
                                    )
                                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ –ø—Å–µ–≤–¥–æ–Ω–∏–º—É —Å–æ–±—ã—Ç–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
                                    slug_num_chars = 64 - (len(str(e['event_id'])) + 1)
                                    event_slug = '{title}-{id}'.format(
                                        title=urlify(e['event_title'], num_chars=slug_num_chars),
                                        id=e['event_id'],
                                    )
                                    # –°–ø–∏—Å–æ–∫ —Ü–µ–Ω –Ω–∞ –±–∏–ª–µ—Ç—ã –¥–ª—è –ª–µ–≥–µ–Ω–¥—ã —Å—Ö–µ–º—ã –∑–∞–ª–∞
                                    prices = ts.prices(event_id=e['event_id'])
                                    # –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–∞ –±–∏–ª–µ—Ç –±–µ—Ä—ë—Ç—Å—è –∏–∑ —Å–ø–∏—Å–∫–∞ —Ü–µ–Ω
                                    e['event_min_price'] = (
                                        prices[0] if
                                        e['event_min_price'] == 0 and len(prices) > 0 else
                                        0
                                    )

                                    # –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ —É–∂–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ
                                    if e['event_id'] in events_id_uuid_mapping.keys():
                                        event_uuid = events_id_uuid_mapping[e['event_id']]
                                        self.stdout.write(
                                            '–°–æ–±—ã—Ç–∏–µ {eid} –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ...'.format(eid=e['event_id'])
                                        )
                                        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–º —Ä–∞–Ω–µ–µ —Å–æ–±—ã—Ç–∏–∏
                                        Event.objects.filter(
                                            id=events_id_uuid_mapping[e['event_id']]
                                        ).update(
                                            datetime=e['event_datetime'],
                                        )
                                    else:
                                        event_uuid = uuid.uuid4()
                                        try:
                                            Event.objects.create(
                                                id=event_uuid,
                                                title=e['event_title'],
                                                slug=event_slug,
                                                description='',
                                                keywords='',
                                                text=e['event_text'],
                                                is_published=False,
                                                is_on_index=False,
                                                min_price=e['event_min_price'],
                                                min_age=e['event_min_age'],
                                                datetime=e['event_datetime'],
                                                event_venue_id=ts_scheme_venue_binder[e['scheme_id']],
                                                domain_id=ticket_service['domain_id'],
                                                is_group=False,
                                                ticket_service_id=ticket_service['id'],
                                                ticket_service_event=e['event_id'],
                                                ticket_service_prices=json.dumps(prices),
                                                ticket_service_scheme=e['scheme_id'],
                                            )
                                        except IntegrityError:
                                            pass
                                        else:
                                            self.log(
                                                '–î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ {id}: {title}'.format(
                                                    id=e['event_id'],
                                                    title=e['event_title']
                                                ), level='SUCCESS'
                                            )
                                    # –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫—ç—à —Å–æ–±—ã—Ç–∏—è
                                    get_or_set_event_cache(event_uuid, reset=True)
                                    self.stdout.write(
                                        '–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω –∫—ç—à —Å–æ–±—ã—Ç–∏—è {eid}'.format(eid=e['event_id'])
                                    )
                else:
                    self.log('–ù–µ—Ç —Å–≤—è–∑–æ–∫ –∑–∞–ª–æ–≤ —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤!', level='NOTICE')
                    continue
        else:
            self.log('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤!', level='ERROR')
