# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-28 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n"
"%100>=11 && n%100<=14)? 2 : 3);\n"

#: admin/ticket_service.py:58
msgid "ticket_service_help_text"
msgstr ""
"<ul>"
"<li><strong>init</strong> { словарь 'ключ': 'значение' } - параметры для подключения (зависят от конкретного сервиса продажи билетов):"
"<ul>"
"<li><strong>СуперБилет</strong>"
"<ul>"
"<li><strong>host</strong> строка - URL для отправки запросов к API,</li>"
"<li><strong>user</strong> строка - имя пользователя API,</li>"
"<li><strong>pswd</strong> строка - пароль пользователя API,</li>"
"<li><strong>mode</strong> строка - режим работы API (<em>agency</em> - Агентство, <em>theatre</em> - Театр).</li>"
"</ul>"
"</li>"
"<li><strong>Радарио</strong>"
"<ul>"
"<li><strong>api_id</strong> число - идентификатор доступа к API,</li>"
"<li><strong>api_key</strong> строка - ключ доступа к API,</li>"
"<li><strong>city_id</strong> число - идентификатор города в БД Радарио, в котором находится организатор,</li>"
"<li><strong>company_id</strong> число - идентификатор организатора в БД Радарио,</li>"
"<li><strong>company_title</strong> строка - название организатора в БД Радарио.</li>"
"</ul>"
"</li>"
"</ul>"
"</li>"
"<li><strong>schemes</strong> [ список чисел ] - список идентификаторов схем залов в сервисе продажи билетов."
"<br>При импорте информации из сервиса продажи билетов:"
"<ul>"
"<li>Если список НЕпустой - будут импортироваться только те залы, идентификаторы которых указаны в этом списке;</li>"
"<li>Если список пустой - будут импортироваться ВСЕ залы.</li>"
"</ul>"
"</li>"
"<li><strong>order</strong> { словарь 'ключ': 'значение' } - включение/выключение способов заказа билетов на сайте (<em>true</em> - включено, <em>false</em> - отключено):"
"<ul>"
"<li><strong>self_cash</strong> логическое значение - получение в кассе (оффлайн-оплата),</li>"
"<li><strong>courier_cash</strong> логическое значение - доставка курьером (оффлайн-оплата),</li>"
"<li><strong>self_online</strong> логическое значение - получение в кассе (онлайн-оплата),</li>"
"<li><strong>email_online</strong> логическое значение - электронный билет на email (онлайн-оплата).</li>"
"</ul>"
"</li>"
"<li><strong>order_description</strong> { словарь 'ключ': 'значение' } - сопроводительный текст к способам заказа билетов - на шаге 2 заказа билетов и в email-уведомлении покупателю (строка, возможно с HTML-кодом):"
"<ul>"
"<li><strong>self_cash</strong> строка - получение в кассе (оффлайн-оплата),</li>"
"<li><strong>courier_cash</strong> строка - доставка курьером (оффлайн-оплата),</li>"
"<li><strong>self_online</strong> строка - получение в кассе (онлайн-оплата),</li>"
"<li><strong>email_online</strong> строка - электронный билет на email (онлайн-оплата).</li>"
"</ul>"
"</li>"
"<li><strong>order_email</strong> { словарь 'ключ': 'значение' } - электронная почта для отправки сообщений администратору и покупателю:"
"<ul>"
"<li><strong>user</strong> строка - логин (например, <em>zakaz@bezantrakta.ru</em>),</li>"
"<li><strong>pswd</strong> строка - пароль.</li>"
"</ul>"
"</li>"
"<li><strong>order_email_description</strong> { словарь 'ключ': 'значение' } - сопроводительный текст к способам заказа билетов в email-сообщении покупателю (строка с HTML-кодом):"
"<ul>"
"<li><strong>self_cash</strong> строка - получение в кассе (оффлайн-оплата),</li>"
"<li><strong>courier_cash</strong> строка - доставка курьером (оффлайн-оплата),</li>"
"<li><strong>self_online</strong> строка - получение в кассе (онлайн-оплата),</li>"
"<li><strong>email_online</strong> строка - электронный билет на email (онлайн-оплата).</li>"
"</ul>"
"</li>"
"<li><strong>max_seats_per_order</strong> число - максимальное число билетов в заказе (по умолчанию - 7).</li>"
"<li><strong>courier_price</strong> число - стоимость доставки курьером в рублях (если <em>0</em> - доставка бесплатная).</li>"
"<li><strong>promoter</strong> строка - организатор мероприятий (промоутер) по умолчанию для всех событий в этом сервисе продажи билетов (подставляется в событии, если это поле в нём пустое).</li>"
"<li><strong>seller</strong> строка - продавец билетов (агент) по умолчанию для всех событий в этом сервисе продажи билетов.</li>"
"<li><strong>heartbeat_timeout</strong> число - время в секундах, по истечении которого вновь запрашивается список доступных к продаже мест на схеме зала (по умолчанию - <em>10</em>).</li>"
"<li><strong>seat_timeout</strong> число - время в минутах, по истечении которого автоматически снимается предварительный резерв мест на схеме зала (по умолчанию - <em>15</em>).</li>"
"<li><strong>hide_sold_non_fixed_seats</strong> логическое значение - возможность скрывать на схеме зала проданные места в секторах без фиксированной рассадки - маркированные списки <em>ul</em> с классом <em>non_fixed_seats</em> (по умолчанию - <em>false</em>).</li>"
"</ul>"

#: admin/ticket_service.py:85
msgid "ticket_service_admin_batch_set_cache"
msgstr "Пересоздать кэш выбранных сервисов продажи билетов"

#: admin/ticket_service.py:95
msgid "event_admin_activate_or_deactivate_items"
msgstr "Включить или отключить сервисы продажи билетов"

#: admin/ticket_service.py:100
msgid "ticket_service_admin_ticket_service_schemes_count"
msgstr "Схем залов"

#: admin/ticket_service.py:106
msgid "ticket_service_admin_is_payment_service_added"
msgstr "Оплата"

#: admin/ticket_service_scheme_sector.py:66
msgid "ticketserviceschemesector_admin_batch_set_cache"
msgstr "Пересоздать кэш выбранных секторов"

#: admin/ticket_service_scheme_sector.py:73
msgid "ticketserviceschemesector_if_sector_exists"
msgstr "Сектор"

#: admin/ticket_service_scheme_sector.py:78
#: admin/ticket_service_scheme_venue_binder.py:100
msgid "ID"
msgstr "ID"

#: admin/ticket_service_scheme_venue_binder.py:81
msgid "ticketservicevenuebinder_admin_batch_set_cache"
msgstr "Пересоздать кэш выбранных схем"

#: admin/ticket_service_scheme_venue_binder.py:88
msgid "ticketservicevenuebinder_if_scheme_exists"
msgstr "Схема зала"

#: admin/ticket_service_scheme_venue_binder.py:95
msgid "ticketservicevenuebinder_if_sectors_exist"
msgstr "Секторы"

#: models/ticket_service.py:34
msgid "ticketservice_id"
msgstr "Идентификатор"

#: models/ticket_service.py:38
msgid "ticketservice_title"
msgstr "Название"

#: models/ticket_service.py:43
msgid "ticketservice_slug_superbilet"
msgstr "СуперБилет"

#: models/ticket_service.py:44
msgid "ticketservice_slug_radario"
msgstr "Радарио"

#: models/ticket_service.py:50
msgid "ticketservice_slug"
msgstr "Сервис продажи билетов"

#: models/ticket_service.py:54
msgid "ticketservice_is_active"
msgstr "Работает"

#: models/ticket_service.py:58
msgid "ticketservice_settings"
msgstr "Настройки в JSON"

#: models/ticket_service.py:64
msgid "ticketservice_domain"
msgstr "Сайт"

#: models/ticket_service.py:71
msgid "ticketservice_schemes"
msgstr "Схемы залов"

#: models/ticket_service.py:79
msgid "ticketservice_payment_service"
msgstr "Сервис онлайн-оплаты"

#: models/ticket_service.py:85
msgid "ticketservice"
msgstr "сервис продажи билетов"

#: models/ticket_service.py:86
msgid "ticketservices"
msgstr "сервисы продажи билетов"

#: models/ticket_service_scheme_sector.py:39
msgid "ticketserviceschemesector_scheme"
msgstr "Схема зала"

#: models/ticket_service_scheme_sector.py:42
msgid "ticketserviceschemesector_ticket_service_sector_id"
msgstr "ID сектора"

#: models/ticket_service_scheme_sector.py:46
msgid "ticketserviceschemesector_ticket_service_sector_title"
msgstr "Название сектора"

#: models/ticket_service_scheme_sector.py:51
msgid "ticketserviceschemesector_sector_help_text"
msgstr ""
"<p>Схемы секторов создаются аналогично схеме зала.<br>Общая схема зала для "
"работы с секторами должна содержать ссылки для открытия схем секторов по "
"клику в отдельном блоке под общей схемой зала. При клике на каком-либо "
"секторе на общей схеме зала выбранный сектор становится видимым, а все "
"остальные секторы скрываются."

#: models/ticket_service_scheme_sector.py:52
msgid "ticketserviceschemesector_sector"
msgstr "Сектор в схеме зала"

#: models/ticket_service_scheme_sector.py:58
msgid "ticketserviceschemesector"
msgstr "сектор в схеме зала"

#: models/ticket_service_scheme_sector.py:59
msgid "ticketserviceschemesectors"
msgstr "секторы в схеме зала"

#: models/ticket_service_scheme_venue_binder.py:43
msgid "ticketserviceschemevenuebinder_ticket_service"
msgstr "Сервис продажи билетов"

#: models/ticket_service_scheme_venue_binder.py:46
msgid "ticketserviceschemevenuebinder_ticket_service_scheme"
msgstr "ID схемы зала"

#: models/ticket_service_scheme_venue_binder.py:50
msgid "ticketserviceschemevenuebinder_ticket_service_scheme_title"
msgstr "Название схемы зала"

#: models/ticket_service_scheme_venue_binder.py:58
msgid "ticketserviceschemevenuebinder_event_venue"
msgstr "Зал"

#: models/ticket_service_scheme_venue_binder.py:63
msgid "ticketserviceschemevenuebinder_scheme_help_text"
msgstr ""
"<p>Схема зала в HTML создаётся, как правило, на основе таблиц. "
"Возможно использование SVG в тех случаях, когда это необходимо.</p>"
"<p>У родительского элемента всей схемы зала (<em>&lt;table&gt;</em> или <em>&lt;svg&gt;</em>) обязательно указывать класс <em>stagehall</em>.</p>"
"<p>Схемы бывают 2-х типов:</p>"
"<ul>"
"<li><strong>обычная схема зала</strong>, в которой содержатся места для выбора покепателем.</li>"
"<li><strong>посекторная схема зала</strong> со ссылками на схемы отдельных секторов, которые добавляются отдельно и связываются с этой посекторной схемой.</li>"
"</ul>"
"<p>Посекторную схему имеете смысл создавать, если зал в сервисе продажи билетов достаточно большой и одновременное открытие всего зала сразу на шаге 1 неудобно для покупателя.</p>"
"<p><strong>Сначала</strong> создаётся и сохраняется посекторная схема, а <strong>затем</strong> в привязке к ней добавляются содержащися в ней секторы.</p>"
"<p>В посекторной схеме нужно добавлять кнопки со ссылками на открытие схем всех её секторов. Для этого ячейка с классом <em>sector</em> должна содержать тег <strong>span</strong> с классом <em>sector-button</em>, а внутри него - радиокнопка (тег <strong>input</strong> с атрибутами <strong>type</strong>='<em>radio</em>' и <strong>name</strong>='<em>sectors</em>') с идентификатором <em>sector-NNN</em> и привязанный к радиокнопке <strong>label</strong> c атрибутом <strong>for</strong>='<em>sector-NNN</em>', содержащий название сектора. <em>NNN</em> - это идентификатор схемы конкретного сектора в базе данных сайта.</p>"
"<p>Идентификатор схемы сектора в базе данных сайта НЕ обязательно должен совпадать с идентификатором сектора в сервисе продажи билетов. Возможно создать несколько схем сектров, содержащих места одного сектора в сервисе продажи билетов (например, в Зелёном театре в Воронеже), если сектор визуально явно разбит на разные группы мест. В этом случае, разные группы мест в секторе, например, <em>123</em> будут хранится в разных схемах секторов, например, <em>1231</em>, <em>1232</em> и <em>1233</em>.</p>"
"<br><p>Для специфических элементов схемы зала/сектора указываются соответствующие классы:</p>"
"<ul>"
"<li><em>stage</em> - сцена,</li>"
"<li><em>sector</em> - название сектора, номер ряда или прочее примечание,</li>"
"<li><em>seat</em> - кликабельное место, которое также содержит <strong>data</strong>-атрибуты места из схемы в сервисе продажи билетов:"
"<ul>"
"<li><strong>data-sector-id</strong> - идентификатор сектора,</li>"
"<li><strong>data-row-id</strong> - идентификатор ряда,</li>"
"<li><strong>data-seat-id</strong> - идентификатор места.</li>"
"</ul>"
"</li>"
"</ul>"
"<p>Остальные <strong>data</strong>-атрибуты (в первую очередь цена) подгружаются к каждому доступному для заказа месту при обновлении схемы зала на шаге 1 заказа билетов.</p>"
"<br><p>Секторы с местами без фиксированной рассадки удобно делать пунктами <em>li</em> маркированных списков <em>ul</em> с классом <em>no-fixed-seats</em>. Если в настройках сервиса продажи билетов указана опция <em>hide_sold_non_fixed_seats</em> в значением <em>true</em>, тогда после загрузки страницы видимыми останутся только свободные места в продаже, а оставшиеся без возможности продажи места будут скрыты.</p>"
"<p>Если в сервисе продажи билетов у мест без фиксированной рассадки нет уникальных идентификаторов (Радарио), в схеме зала создаётся необходимое количество мест, у которых <strong>data-sector-id</strong> и <strong>data-row-id</strong> равны <em>0</em>, а <strong>data-seat-id</strong> нумеруются по порядку, начиная с <em>1</em>.</p>"

#: models/ticket_service_scheme_venue_binder.py:64
msgid "ticketserviceschemevenuebinder_scheme"
msgstr "Схема зала"

#: models/ticket_service_scheme_venue_binder.py:70
msgid "ticketserviceschemevenuebinder"
msgstr "схема зала"

#: models/ticket_service_scheme_venue_binder.py:71
msgid "ticketserviceschemevenuebinders"
msgstr "схемы залов"
