# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-07 13:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('event', '0002_auto'),
        ('location', '0001_initial'),
        ('ticket_service', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_service_order', models.PositiveIntegerField(blank=True, db_column='ticket_service_order_id', null=True, verbose_name='ID заказа')),
                ('ticket_service_event', models.PositiveIntegerField(db_column='ticket_service_event_id', verbose_name='ID события')),
                ('datetime', models.DateTimeField(verbose_name='Дата и время')),
                ('name', models.CharField(max_length=128, verbose_name='ФИО')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=20, verbose_name='Телефон')),
                ('address', models.CharField(blank=True, max_length=128, null=True, verbose_name='Адрес доставки')),
                ('delivery', models.CharField(choices=[('self', 'Выкуп в кассе'), ('courier', 'Доставка курьером'), ('email', 'Электронный билет на email')], default='self', max_length=16, verbose_name='Получение билетов')),
                ('payment', models.CharField(choices=[('cash', 'Оплата наличными'), ('online', 'Онлайн-оплата')], default='cash', max_length=16, verbose_name='Оплата билетов')),
                ('payment_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='ID онлайн-оплаты')),
                ('status', models.CharField(choices=[('ordered', 'создан'), ('cancelled', 'отменён'), ('approved', 'подтверждён'), ('refunded', 'возвращён')], default='ordered', max_length=16, verbose_name='Статус')),
                ('tickets_count', models.PositiveSmallIntegerField(default=0, verbose_name='Билетов')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('domain', models.ForeignKey(db_column='domain_id', on_delete=django.db.models.deletion.CASCADE, to='location.Domain', verbose_name='Сайт')),
                ('event', models.ForeignKey(db_column='event_id', on_delete=django.db.models.deletion.CASCADE, to='event.Event', verbose_name='Событие')),
                ('ticket_service', models.ForeignKey(db_column='ticket_service_id', on_delete=django.db.models.deletion.CASCADE, to='ticket_service.TicketService', verbose_name='Сервис продажи билетов')),
            ],
            options={
                'db_table': 'bezantrakta_order',
                'verbose_name_plural': 'заказы',
                'ordering': ('domain', '-datetime', 'ticket_service'),
                'verbose_name': 'заказ',
            },
        ),
        migrations.CreateModel(
            name='OrderTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID билета')),
                ('ticket_service_order', models.PositiveIntegerField(db_column='ticket_service_order_id', null=True, verbose_name='ID заказа')),
                ('is_punched', models.BooleanField(default=False, verbose_name='Пробит ли на входе')),
                ('bar_code', models.CharField(max_length=32, null=True, verbose_name='Штрих-код')),
                ('sector_id', models.PositiveIntegerField(null=True, verbose_name='ID сектора')),
                ('sector_title', models.CharField(max_length=128, null=True, verbose_name='Сектор')),
                ('row_id', models.PositiveIntegerField(null=True, verbose_name='Ряд')),
                ('seat_id', models.PositiveIntegerField(null=True, verbose_name='ID места')),
                ('seat_title', models.CharField(max_length=128, null=True, verbose_name='Место')),
                ('price_group_id', models.PositiveIntegerField(null=True, verbose_name='ID группы цен')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('domain', models.ForeignKey(db_column='domain_id', on_delete=django.db.models.deletion.CASCADE, to='location.Domain', verbose_name='Сайт')),
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, to='order.Order', verbose_name='ID заказа')),
                ('ticket_service', models.ForeignKey(db_column='ticket_service_id', on_delete=django.db.models.deletion.CASCADE, to='ticket_service.TicketService', verbose_name='Сервис продажи билетов')),
            ],
            options={
                'db_table': 'bezantrakta_order_ticket',
                'verbose_name_plural': 'билеты',
                'ordering': ('domain', 'ticket_service', '-ticket_service_order', 'sector_id', 'row_id', 'seat_id', 'price'),
                'verbose_name': 'билет',
            },
        ),
        migrations.AlterUniqueTogether(
            name='orderticket',
            unique_together=set([('domain', 'sector_id', 'row_id', 'seat_id', 'price_group_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='order',
            unique_together=set([('domain', 'id')]),
        ),
    ]
