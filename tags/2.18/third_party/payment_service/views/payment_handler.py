import logging
import uuid

from django.db.models import F
from django.shortcuts import redirect

from project.cache import cache_factory
from project.shortcuts import message, render_messages, timezone_now

from bezantrakta.order.models import Order, OrderTicket
from bezantrakta.order.shortcuts import success_or_error


def payment_handler(request):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –∏–ª–∏ –ù–ï—É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã."""
    logger = logging.getLogger('bezantrakta.order')

    event_uuid = uuid.UUID(request.GET.get('event_uuid', None))
    order_uuid = uuid.UUID(request.GET.get('order_uuid', None))

    # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å—Ä–∞–∑—É –≤ GET-–ø–∞—Ä–∞–º–µ—Ä–∞—Ö
    # (–≤–æ–∑–º–æ–∂–Ω—ã–π –æ–±—Ö–æ–¥–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ–ª—å–∑—è –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º)
    success = request.GET.get('success', None)
    payment_id = request.GET.get('payment_id', None)
    error_code = request.GET.get('error_code', None)
    error_message = request.GET.get('error_message', None)

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –ù–ï–ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    if not event_uuid or not order_uuid:
        msgs = [
            message('error', '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. üòû'),
            message('info', 'üëâ <a href="/">–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.'),
        ]
        render_messages(request, msgs)
        return redirect('error')

    now = timezone_now()
    logger.info('\n----------–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞ {order_uuid}----------'.format(order_uuid=order_uuid))
    logger.info('{:%Y-%m-%d %H:%M:%S}'.format(now))

    event = cache_factory('event', event_uuid)
    event['id'] = event['ticket_service_event']
    logger.info('–°–æ–±—ã—Ç–∏–µ')
    logger.info(event)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–∫–∞–∑–∞ –∏–∑ –ë–î
    try:
        order = dict(Order.objects.annotate(
            event_uuid=F('event'),
            event_id=F('ticket_service_event'),
            order_uuid=F('id'),
            order_id=F('ticket_service_order'),
        ).values(
            'event_uuid',
            'event_id',
            'order_uuid',
            'order_id',
            'ticket_service_id',
            'name',
            'email',
            'phone',
            'delivery',
            'payment',
            'payment_id',
            'status',
            'tickets_count',
            'total'
        ).get(
            id=order_uuid,
        ))
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∏–ª–µ—Ç–æ–≤ –≤ –∑–∞–∫–∞–∑–µ
        try:
            order['tickets'] = list(OrderTicket.objects.annotate(
                ticket_id=F('id'),
            ).values(
                'ticket_id',
                'ticket_service_order',
                'bar_code',
                'sector_id',
                'sector_title',
                'row_id',
                'seat_id',
                'seat_title',
                'price_group_id',
                'price'
            ).filter(
                order_id=order_uuid
            ))
        except OrderTicket.DoesNotExist:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            msgs = [
                message('error', '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –∑–∞–∫–∞–∑–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –±–∏–ª–µ—Ç–∞ - –±—Ä–æ–Ω—å –Ω–∞ –±–∏–ª–µ—Ç—ã –∏—Å—Ç–µ–∫–ª–∞. üòû'),
                message('info', 'üëâ <a href="{event_url}">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–∏–ª–µ—Ç—ã –µ—â—ë —Ä–∞–∑</a>.'.format(
                        event_url=event['url'])
                        ),
            ]
            render_messages(request, msgs)
            return redirect('error')
    except Order.DoesNotExist:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        msgs = [
            message('error', '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–π –∑–∞–∫–∞–∑ –µ—â—ë –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω. üòû'),
            message('info', 'üëâ <a href="{event_url}">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–∏–ª–µ—Ç—ã –µ—â—ë —Ä–∞–∑</a>.'.format(
                    event_url=event['url'])
                    ),
        ]
        render_messages(request, msgs)
        return redirect('error')
    else:
        logger.info('\n–ó–∞–∫–∞–∑')
        logger.info(order)
        logger.info('\n–ë–∏–ª–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ')
        logger.info(order['tickets'])

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã
        payment_service = cache_factory('payment_service', event['payment_service_id'])
        # –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã
        ps = payment_service['instance']

        # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
        if success is None:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã
            payment_status = ps.payment_status(payment_id=order['payment_id'])
        # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å—Ä–∞–∑—É –≤ GET-–ø–∞—Ä–∞–º–µ—Ä–∞—Ö
        else:
            payment_status = {}
            payment_status['success'] = success
            payment_status['payment_id'] = payment_id
            payment_status['error_code'] = error_code
            payment_status['error_message'] = error_message

        logger.info('payment_status: {}'.format(payment_status))

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –∏–ª–∏ –ù–ï—É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
        result = success_or_error(request, payment_status, order, event)

        # –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —à–∞–≥ 3 —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ
        if result:
            return redirect('order:confirmation', order_uuid=order['order_uuid'])
        # –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –ù–ï—É—Å–ø–µ—à–Ω–æ - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—à–∏–±–∫–µ
        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            msgs = [
                message('error', '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–ø–ª–∞—Ç—ã –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. üòû'),
                message('error', '{code} {message}'.format(
                        code=payment_status['error_code'],
                        message=payment_status['error_message'])
                        ),
                message('info', 'üëâ <a href="{event_url}">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–∏–ª–µ—Ç—ã –µ—â—ë —Ä–∞–∑</a>.'.format(
                        event_url=event['url'])
                        ),
            ]
            render_messages(request, msgs)

            return redirect('error')
