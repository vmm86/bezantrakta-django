import datetime

from django.db.models import F
from django.shortcuts import redirect, render
from django.views.decorators.csrf import ensure_csrf_cookie

from project.cache import cache_factory
from project.shortcuts import build_absolute_url, message, render_messages, timezone_now

from ..models import Event, EventGroupBinder, EventLinkBinder


@ensure_csrf_cookie
def event(request, year, month, day, hour, minute, slug):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è.

    –®–∞–≥ 1 –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–∫–∞–∑–∞ –±–∏–ª–µ—Ç–æ–≤ - –≤—ã–±–æ—Ä –±–∏–ª–µ—Ç–æ–≤ –Ω–∞ —Å—Ö–µ–º–µ –∑–∞–ª–∞ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –∑–∞–∫–∞–∑–∞.

    –°—Ö–µ–º–∞ –∑–∞–ª–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞ –±–∏–ª–µ—Ç–æ–≤ –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ —Å–µ—Ä–≤–∏—Å—É –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤.

    –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π (–ø—Å–µ–≤–¥–æ–∫–æ–¥):
    ::

        try event:  # –ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏—è –≤ –ë–î –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
            ...
        except:  # –°–æ–±—ã—Ç–∏—è –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
            [ –û—à–∏–±–∫–∞ 404 ]
        else:  # –°–æ–±—ã—Ç–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
            if event.is_published:  # –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ
                if event.is_coming:  # –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ –µ—â—ë –ù–ï –ø—Ä–æ—à–ª–æ
                    [ –í—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –±–∏–ª–µ—Ç–æ–≤ ]
                else:  # –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ —É–∂–µ –ø—Ä–æ—à–ª–æ
                    [ –¢–æ–ª—å–∫–æ –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—ã—Ç–∏–∏ ]
            else:  # –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ
                if event.is_coming:  # –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ –µ—â—ë –ù–ï –ø—Ä–æ—à–ª–æ
                    [ –û—à–∏–±–∫–∞ 403 ]
                else:  # –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ —É–∂–µ –ø—Ä–æ—à–ª–æ
                    [ –û—à–∏–±–∫–∞ 410 ]

    Args:
        year (str): –ì–æ–¥ –∏–∑ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±—ã—Ç–∏—è (``YYYY``).
        month (str): –ú–µ—Å—è—Ü –∏–∑ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±—ã—Ç–∏—è (``MM``).
        day (str): –î–µ–Ω—å –∏–∑ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±—ã—Ç–∏—è (``DD``).
        hour (str): –ß–∞—Å –∏–∑ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±—ã—Ç–∏—è (``HH``).
        minute (str): –ú–∏–Ω—É—Ç—ã –∏–∑ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±—ã—Ç–∏—è (``MM``).
        slug (str): –ü—Å–µ–≤–¥–æ–Ω–∏–º —Å–æ–±—ã—Ç–∏—è.
    """
    current_timezone = request.city_timezone
    event_datetime = datetime.datetime(
        year=int(year),
        month=int(month),
        day=int(day),
        hour=int(hour),
        minute=int(minute),
    )
    event_datetime_localized = current_timezone.localize(event_datetime)

    # –ó–∞–ø—Ä–æ—Å –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–±—ã—Ç–∏–∏ –≤ –ë–î
    try:
        event = Event.objects.annotate(
            event_uuid=F('id'),
            payment_service_id=F('ticket_service__payment_service_id'),
        ).values(
            'event_uuid',
            'ticket_service_id',
            'payment_service_id'
        ).get(
            datetime=event_datetime_localized,
            slug=slug,
            domain_id=request.domain_id,
        )
    # –°–æ–±—ã—Ç–∏–µ –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
    except Event.DoesNotExist:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        msgs = [
            message('error', '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. üôÅ'),
            message('info', 'üëâ <a href="/">–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.'),
        ]
        render_messages(request, msgs)
        return redirect('error', 404)

    # –°–æ–±—ã—Ç–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
    else:
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—ã—Ç–∏–∏ –∏–∑ –∫—ç—à–∞
        event = cache_factory('event', event['event_uuid'])

        # –°–æ–±—ã—Ç–∏–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∏–ª–∏ —É–∂–µ –ø—Ä–æ—à–ª–æ
        today = timezone_now()
        event['is_coming'] = True if event['event_datetime'] > today else False

        # –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ
        if event['is_published']:

            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
            ticket_service = (
                cache_factory('ticket_service', event['ticket_service_id']) if
                event['ticket_service_id'] else
                None
            )

            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã –±–∏–ª–µ—Ç–æ–≤
            payment_service = (
                cache_factory('payment_service', event['payment_service_id']) if
                event['payment_service_id'] else
                None
            )

            context = {}

            # –ó–∞–ø—Ä–æ—Å —Å—Å—ã–ª–æ–∫ –≤ —ç—Ç–æ–º —Å–æ–±—ã—Ç–∏–∏
            try:
                links = EventLinkBinder.objects.select_related(
                    'event_link',
                    'event',
                    'domain'
                ).annotate(
                    title=F('event_link__title'),
                    img=F('event_link__img'),
                ).filter(
                    event__is_published=True,
                    event__datetime=event_datetime_localized,
                    event__slug=slug,
                    event__domain_id=request.domain_id,
                ).values(
                    'title',
                    'href',
                    'img',
                )
            # –°—Å—ã–ª–æ–∫ –Ω–µ—Ç
            except EventLinkBinder.DoesNotExist:
                pass
            # –°—Å—ã–ª–∫–∏ –µ—Å—Ç—å
            else:
                context['links'] = links

            # –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ –≥—Ä—É–ø–ø–µ
            if event['is_in_group']:
                # –ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏–π –≤ –≥—Ä—É–ø–ø–µ
                group_events = EventGroupBinder.objects.select_related(
                    'event',
                    'domain',
                ).annotate(
                    title=F('event__title'),
                    slug=F('event__slug'),
                    datetime=F('event__datetime'),
                    venue=F('event__event_venue__title'),
                ).filter(
                    group=event['group_uuid'],
                    event__is_published=True,
                    event__datetime__gt=today,
                    event__domain_id=request.domain_id,
                ).values(
                    'title',
                    'slug',
                    'datetime',
                    'venue',
                    'caption',
                ).order_by(
                    'datetime'
                )
                context['group_events'] = list(group_events)

            # –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ —Å–µ—Ä–≤–∏—Å—É –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
            if event['ticket_service_event']:
                # –°—Ö–µ–º–∞ –∑–∞–ª–∞ –∏–∑ –ë–î
                context['venue_scheme'] = cache_factory(
                    'ticket_service_scheme', event['ticket_service_scheme'],
                    ticket_service_id=event['ticket_service_id']
                )
                # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä—ã –≤ —Å—Ö–µ–º–µ –∑–∞–ª–∞ –∏–∑ –ë–î
                context['venue_scheme_sectors'] = context['venue_scheme']['sectors']

            context['event'] = event
            context['ticket_service'] = ticket_service
            context['payment_service'] = payment_service

            context['checkout_url'] = build_absolute_url(request.domain_slug, '/afisha/checkout/')

            return render(request, 'event/event.html', context)
        # –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ
        else:
            # –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ –µ—â—ë –ù–ï –ø—Ä–æ—à–ª–æ
            if event['is_coming']:
                # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                msgs = [
                    message('error', '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ –µ—â—ë –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ. üôÅ'),
                    message('info', 'üëâ –ó–∞–π–¥–∏—Ç–µ –ø–æ–∑–¥–Ω–µ–µ –∏–ª–∏ <a href="/">–Ω–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.'),
                ]
                render_messages(request, msgs)
                return redirect('error', 403)
            # –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ —É–∂–µ –ø—Ä–æ—à–ª–æ
            else:
                # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                msgs = [
                    message('error', '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ —É–∂–µ –ø—Ä–æ—à–ª–æ –∏ —Å–Ω—è—Ç–æ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. üôÅ'),
                    message('info', 'üëâ <a href="/">–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.'),
                ]
                render_messages(request, msgs)
                return redirect('error', 410)
