import json

from django.conf import settings
from django.db.models import CharField, Case, When, Value, Q
from django.http.request import split_domain_port
from django.shortcuts import render
from django.utils import timezone
from django.utils.deprecation import MiddlewareMixin

from .models import City, Domain


class CurrentLocationMiddleware(MiddlewareMixin):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –≥–æ—Ä–æ–¥–µ –∏ –¥–æ–º–µ–Ω–µ –∏ –µ—ë –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ request.
    """
    def process_request(self, request):
        host = request.get_host()
        url_domain, url_port = split_domain_port(host)
        root_domain = settings.ROOT_DOMAIN
        root_domain_slug = settings.ROOT_DOMAIN_SLUG
        # –ï—Å–ª–∏ URL —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –µ–≥–æ –ø–æ–¥–¥–æ–º–µ–Ω(—ã)
        if url_domain.endswith(root_domain):
            domain_slug = url_domain[:-len(root_domain)].rstrip('.')
            # –û–±—Ö–æ–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–¥–¥–æ–º–µ–Ω–∞ –¥–ª—è –≤–æ—Ä–æ–Ω–µ–∂—Å–∫–æ–≥–æ —Å–∞–π—Ç–∞
            domain_slug = root_domain_slug if domain_slug == '' else domain_slug

        request.domain_is_published = False

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –¥–æ–º–µ–Ω–µ –≤ –ë–î
        try:
            domain = Domain.objects.select_related('city').values(
                'id',
                'slug',
                'is_published',
                'settings',
                'city__title',
                'city__slug',
                'city__timezone',
                'city__state',
            ).get(slug=domain_slug)
        # –ï—Å–ª–∏ –¥–æ–º–µ–Ω –ù–ï –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î - —Ç–∞–∫–æ–π —Å–∞–π—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–æ—à–∏–±–∫–∞ 500)
        except Domain.DoesNotExist:
            context = {
                'title': """–°–∞–π—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç""",
                'message': """<p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —Å–∞–π—Ç–∞ —É –Ω–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç. üôÅ</p>""",
            }
            return render(request, 'empty.html', context, status=500)
        # –ï—Å–ª–∏ –¥–æ–º–µ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î
        else:
            request.domain_slug = domain['slug']
            request.domain_id = domain['id']
            request.domain_is_published = domain['is_published']
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ–º–µ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏–∑ –ë–î
            request.settings = json.loads(domain['settings'])

            request.city_title = domain['city__title']
            request.city_slug = domain['city__slug']
            request.city_timezone = domain['city__timezone']
            request.city_state = domain['city__state']

            # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –æ—Ç–∫–ª—é—á–µ–Ω - —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–æ—à–∏–±–∫–∞ 500)
            if request.city_state is False:
                context = {
                    'title': """–ì–æ—Ä–æ–¥ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω""",
                    'message': """<p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ—Å–µ—â–µ–Ω–∏—è.</p>""",
                }
                return render(request, 'empty.html', context, status=500)
            # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ - "—Å–∫–æ—Ä–æ –æ—Ç–∫—Ä—ã—Ç–∏–µ" (–æ—à–∏–±–∫–∞ 503)
            elif request.city_state is None:
                context = {
                    'title': """–°–∫–æ—Ä–æ –æ—Ç–∫—Ä—ã—Ç–∏–µ""",
                    'message': """<p>–≠—Ç–æ—Ç –≥–æ—Ä–æ–¥ –ø–æ–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏, —Å–∫–æ—Ä–æ –æ—Ç–∫—Ä—ã—Ç–∏–µ.</p>""",
                }
                return render(request, 'empty.html', context, status=503)
            # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –≤–∫–ª—é—á–µ–Ω
            elif request.city_state is True:
                # –ï—Å–ª–∏ –¥–æ–º–µ–Ω –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω - —Å–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–æ—à–∏–±–∫–∞ 503)
                if not request.domain_is_published:
                    context = {
                        'title': """–°–∞–π—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω""",
                        'message': """<p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–∞–π—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.</p>
                        <p>–ü—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã.</p>""",
                    }
                    return render(request, 'empty.html', context, status=503)
                # –ï—Å–ª–∏ –∏ –≥–æ—Ä–æ–¥, –∏ –¥–æ–º–µ–Ω –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã
                else:
                    # –ü–æ–ª–Ω—ã–π URL –±–µ–∑ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö GET-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (query string)
                    path = request.get_full_path().split('?')[0]

                    request.root_domain = settings.ROOT_DOMAIN
                    request.url_domain = url_domain
                    request.url_path = path
                    request.url_full = ''.join((url_domain, path,))

                    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
                    if request.city_timezone:
                        # –ù–∞ —Å–∞–π—Ç–µ (–Ω–æ –Ω–µ –≤ –∞–¥–º–∏–Ω–∫–µ!)
                        # –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –≥–æ—Ä–æ–¥–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–∞–π—Ç–∞ –∏–∑ –ë–î
                        if settings.BEZANTRAKTA_ADMIN_URL not in request.url_path:
                            current_timezone = request.city_timezone
                        else:
                            current_timezone = request.COOKIES.get('bezantrakta_admin_timezone', 'Europe/Moscow')
                        timezone.activate(current_timezone)
                    # –ò–Ω–∞—á–µ - —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–µ–∫—Ç–∞ (UTC)
                    else:
                        timezone.deactivate()

                # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
                try:
                    cities = City.objects.annotate(
                        status=Case(
                            When(state=True, then=Value('ready')),
                            default=Value('coming-soon'),
                            output_field=CharField()
                        ),
                    ).filter(
                        Q(state=True) | Q(state=None),
                    ).values(
                        'title',
                        'slug',
                        'state',
                        'status'
                    )
                except City.DoesNotExist:
                    context = {
                        'title': """–ì–æ—Ä–æ–¥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç""",
                        'message': """<p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏ –æ–¥–∏–Ω –≥–æ—Ä–æ–¥ –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∫–∞–∑–∞. üôÅ</p>""",
                    }
                    return render(request, 'empty.html', context, status=500)
                else:
                    request.cities = list(cities)
                    # –ü—Å–µ–≤–¥–æ–Ω–∏–º –≥–æ—Ä–æ–¥–∞ –∏–∑ –∫—É–∫–∏ `bezantrakta_city`
                    request.bezantrakta_city = request.COOKIES.get('bezantrakta_city', None)
