##############
Заказы билетов
##############

*********************
Жизненный цикл заказа
*********************

Для начала рассмотрим **жизненый цикл заказа** (как может меняться состояние заказа при работе с ним).

.. image:: /docs/_static/order/order_lifecycle.png

**Предварительный резерв (ПР)**
  Заготовка будущего заказа на шагах 1 и 2 заказа билетов до момента подтверждения покупателем на шаге 2.

**Заказ**
  Созданный покупателем заказ на выбранные им билеты, прналежащий конкретному СПБ.

После создания заказ может быть:

* либо **подтверждён** как успешно созданный, если в процессе его офрмления не возникло ошибок,
* либо **отменён**, если в процессе оформления что-то пошло не так.

.. only:: dev

  ПР создаётся при заходе покупателя на странцу события (шаг 1 заказ билетов) и хранится в файловом кэше на сервере с помощью кастомного класса ``OrderCache``. Если пользователь доходит до успешного создания заказа - заказ и билеты в заказе создаются как новые записи в соотв. таблицах базы данных сайта, а файловый кэш ПР удаляется. Затем при проведении операций с заказом его файловый кэш каждый раз создаётся заново (уже на основе данных из БД) и удаляется по завершении операции. ПР, не дошедшие до создания заказа, никак не инвалидируются, поэтому их нужно удалять вручную (во время простоя в межсезонье или, например, в новогоднюю ночь).

****************************
Шаги заказа билетов на сайте
****************************

Процесс заказа пользователем билетов на сайте состоит из 3-х последовательных шагов:

1. Шаг 1 - **Выбор билетов**;
2. Шаг 2 - **Оформление билетов**;
3. Шаг 3 - **Подтверждение оформления**.

.. note:: Выполнение этих шагов пользователем учитывается и хранится в статистике счётчиков Яндекс и Google Analytics с помощью отправки событий, настроенных в них :doc:`на этапе настройки нового сайта </docs/workflow/01_create_new_website>`. Это позволяет отслеживать конверсию продаж на каждом сайте.

На всех шагах заказа билетов в любом случае отображаются:

* **блок прогресса** сверху, показывающий, на каком конкретно шаге в данный момент находится пользователь;
* **заголовок события**, в котором указаны *название события*, *дата/время* его проведения и *зал*, в котором оно будет проведено;
* **корзина заказа**, в которой отображаются выбранные покупателем места (в предварительном резерве до создания заказа или на шаге 3 после успешного создания заказа).

В то же время на разных шагах заказа билетов размещается информация, специфичная для конкретного шага:

.. image:: /docs/_static/website/bezantrakta_order_step1.png

1. Шаг 1 одновременно является **страницей события**.

  .. note:: Заказ для удобства работы с ним может быть создан только в рамках одного события, поэтому при заходе на страницу события текущий ПР покупателя проверяется, и если оказывается, что в него добавлены места из другого события, то он принудительно удаляется (с освобождением этих мест для заказ другими пользователями) и создаётся новый пустой ПР.

  На этой странице выводится **схема зала** для выбора билетов покупателем и их добавления в предварительный резерв. Схема зала может быть 2-х типов:

  * **обычная схема зала** (табличная), в которой содержатся кликабельные места для выбора покупателем.

  .. image:: /docs/_static/website/bezantrakta_order_scheme_sectors_table.png

  * **посекторная схема зала** (табличная или круговая) с активными кнопками для выбора схем отдельных секторов.

  .. image:: /docs/_static/website/bezantrakta_order_scheme_sectors_circle.png

  В этом случае при клике на какой-либо из активных кнопок в общей посекторной схеме схема выбранного сектора открывается нижк, а все другие схемы скрываются.

  Места на схеме зала добавляются покупателем в ПР при клике на них (удаляются из ПР при повторном клике) и остаются в ПР на время, указанное в параметре ``seat_timeout`` в JSON-настройках СПБ (по умолчанию - ``15 минут``, если этот параметр не задан явно). Обратный отсчёт для каждого выбранного места выводится посекундно в корзине заказа. Если за это время заказ не был подтверждён, **места удаляются из предварительного резерва** и становятся доступны для заказа другим пользователям.

  Также внизу страницы размещено текстовое описание события в HTML, а также блоки "Поделиться" и "Справки и бронирование", размещаемые на главной странице.

.. image:: /docs/_static/website/bezantrakta_order_step2.png

2. Шаг 2 содержит:

  * поля для внесения **реквизитов покупателя**,

    .. note:: Введённые покупателем реквизиты (ФИО, email, телефон), а также выбранный спобов заказа билетов для удобства **запоминаются в cookies** конкретного браузера на год (если в браузере включена работа с cookies) и исползуются при следующих заказах как **значения по умолчанию**. В противном случае пользователю нужно будет вводить свои реквизиты при каждом новом заказе.

  * чекбокс для **согласия на использование персональных данных** покупателя при создании заказа (не выделив его, заказ нельзя подтвердить),

  * **кнопки для выбора способа заказа билетов** и сопроводительный текст к ним.

    Если в событии доступен заказ с онлайн-оплатой - при его выборе отображается обязательное для показа описание процесса онлайн-оплаты, специфичное для конкретного СОО.

.. image:: /docs/_static/website/bezantrakta_order_step3.png

3. Шаг 3 содержит **краткую информацию о созданном заказе**, если заказ завершился успешно. В противном случае покупатель увидит страницу с сообщением об ошибке и обратной ссылкой на событие либо на главную страницу сайта.

...

**********************
Способы заказа билетов
**********************

На сайтах Безантракта исторически сложились 4 способа заказ билетов, каждый из которых по сути представляет собой комбинацию **способа получения билетов**, **способа оплаты заказа** и (неявно) **типа билетов в заказе** (печатные или электронные).

Способы получения билетов обозначаются следующим образом:

* ``self`` - получение билетов в кассе самим покупателем (если в городе у владельца сайта есть кассы Безантракта);
* ``courier`` - доставка билетов курьером покупателю на дом (если курьерская доставка доступна в конкретном городе);
* ``email`` - отправка сгенерированных электронных PDF-билетов на email покупателю.

Способы оплаты заказа обозначаются следующим образом:

* ``cash`` - **оффлайн-оплата** на месте (наличными, банковской картой в терминале, бесконтактная оплата смартфоном и проч.).

  .. todo:: Этот способ оплаты логичнее было бы назвать ``offline`` в противовес ``online``, но изначално в текущей версии проекта он был реализован как ``cash``.

* ``online`` - **онлайн-оплата** прямо на сайте (как правило, банковской картой) в процессе оформления заказа, используя тот или иной СОО.

Эти две составляющие объединены в способы заказа билетов, которые показываются для выбора покупателем на шаге 2 заказа билетов:

================  ===================  ===============  ==================
Способ заказа     Получение билетов    Оплата билетов   Тип билетов
================  ===================  ===============  ==================
``self_cash``     покупателем в кассе  оффлайн-оплата   печатные билеты
``courier_cash``  доставка курьером    оффлайн-оплата   печатные билеты
``self_online``   покупателем в кассе  онлайн-оплата    печатные билеты
``email_online``  на email покупателю  онлайн-оплата    электронные билеты
================  ===================  ===============  ==================

Произвольное комбинирование разных способов получения билетов/оплаты заказа на данный момент не предусмотрено.

.. note:: Если пользователь ранее не делал заказов на сайте или если его информация по какой-то причине не была сохранена в cookies, первый из доступных способов заказа билетов на шаге 2 выбирается автоматически, чтобы избежать ошибок при подтверждении заказа.

*****************
Возможные наценки
*****************

При публикации событий на сайте возможно добавление разных **наценок**, увеличивающих итоговую сумму при формировании заказа. Эти наценки могут быть слудующих типов:

* **Стоимость доставки курьером**, если она больше ``0`` и курьерская доставка доступна (на сайте в целом и в конкретном событии);
* **Комиссия СОО**, если она больше ``0`` и онлайн-оплата доступна на сайте;
* **Сервисный сбор** на все билеты в заказе, заданный в JSON-настройках события в параметре ``extra``, если он не равен ``0`` для выбранного покупателем способа заказа билетов.

В зависимости от JSON-настроек того или иного СПБ, СОО и конкретного события, соотношение этих параметров и величина наценки могут быть разными вплоть до её отсутствия. В любом случае сначала проверяется наличие сервисного сбора ``extra``, затем аличие курьерской доставки/комиссии СОО. Общая сумма заказа при использовании оффлайн-оплаты пересчитывается и делается кратной заданному значению (``50`` рублей).

Например, сумма заказа без наценок ``10`` рублей:

* ``self_cash``

  * ``extra == 0`` 10 р.
  * ``extra == 5`` 10,5 р.

* ``courier_cash``

  * ``extra == 0`` 1000 р.

    * ``courier_price == 0`` 10 р.
    * ``courier_price == 300`` 310 р. **Всего с учётом доставки курьером**

  * ``extra == 5`` 10,5 р.

    * ``courier_price == 0`` 10,5 р. **Всего с учётом сервисного сбора**
    * ``courier_price == 300`` 310,5 р. **Всего с учётом доставки курьером и сервисного сбора**

* ``self_online``

  * ``extra == 0``

    * ``commission == 0`` 10 р.
    * ``commission == 2.8`` 10,28 р. **Всего с учётом комиссии платёжной системы**

  * ``extra == 5``

    * ``commission == 0`` 10,5 р. **Всего с учётом комиссии платёжной системы и сервисного сбора**
    * ``commission == 2.8`` 10,79 р. **Всего с учётом комиссии платёжной системы и сервисного сбора**

* ``email_online``

    * ``commission == 0`` 10 р.
    * ``commission == 2.8`` 10,28 р. **Всего с учётом комиссии платёжной системы**

  * ``extra == 5``

    * ``commission == 0`` 10,5 р. **Всего с учётом комиссии платёжной системы и сервисного сбора**
    * ``commission == 2.8`` 10,79 р. **Всего с учётом комиссии платёжной системы и сервисного сбора**

.. todo:: Теоретически по той же схеме, что и наценки, можно предусмотреть также и механизм **скидок** на те или иные способы заказа в том или ином событии, например, с помощью **промокодов**.

************************************
Обработка заказа после подтверждения
************************************

Обработка заказа после его подтверждения на шаге 2 заказа билетов проходит по-разному в зависимости от выбранного способа оплаты билетов:

* при **оффлайн-оплате** оформднеи заказ завершается сразу же, без открытия промежуточных страниц

  * если заказ создан успешно, он завершается как **подтверждённый** (с открытием шага 3 с краткой информацией о заказе);

  * если при создании заказа возникли какие-то ошибки, он завершается как **отменённый** (с открытием шага 3 с краткой информацией о заказе).

* при **онлайн-оплате** в процессе оформления покупаетля перенаправляет на страницу оплаты

  * создаётся новая онлайн-оплата в конкретном СОО,
  * покупатель перенаправляется на страницу оплаты (платёжную форму), на которой в отведённое для оплаты время (указанное в параметре ``timeout`` в JSON-настройках СОО, по умолчанию ``15`` минут) он должен оплатить заказ:

    * если покупатель **успешно оплачивает заказ** в отведённое для этого время, он перенаправляется обратно на сайт, заказ обрабатывается полностью и завершается как **подтверждённый** (с открытием шага 3 с краткой информацией о заказе);

    * если покупатель **не смог оплатить заказ** в отведённое для этого время, оставаясь на странице оплаты, он перенаправляется обратно на сайт, заказ обрабатывается полностью и завершается как **отменённый** (с открытием страницы с информацией об ошибке и обратной ссылкой на страницу события или на главную).

    .. attention:: Если после открытия страницы оплаты по каким-то причинам **оформление заказа не смогло завершиться на сайте должным образом** и заказ продолжает оставаться в статусе "создан", он будет доофомлен при очередном запуске задания на проверку заказов с незавершёнными онлайн-оплатами. Запуск задания ``ps_checkup`` происходит **раз в 15 минут** (``10``-я, ``25``-я, ``40``-я и ``55``-я минута каждого часа).

.. only:: dev

  Работа с заказом проходит в приложении ``order`` с помощью класса ``OrderBasket``, в котором сосредоточен функционал пошаговой работы с заказами, в том числе:

  * Добавление/удаление билета в ПР ``ticket_toggle``
  * Получение общей суммы заказа (с возможными наценками) ``get_overall``
  * Создание нового заказа в СПБ из имеющегося ПР ``order_create``
  * Создание новой онлайн-оплаты (если это нобходимо для конкретного заказа) ``payment_create``
  * Получение статуса созщданной ранее онлайн-оплаты ``payment_status``
  * Подтверждение успешно оформленного заказа в СПБ ``order_approve``
  * Отмена неудачно оформленного заказа ``order_cancel``
  * Возврат стоимости заказа с онлайн-оплатой покупателю ``order_refund``
  * Отправка уведомлений администратору и покупателю ``email_admin`` ``email_customer``

  Обработка заказа после его подтверждения на шаге 2 заказа билетов проходит в методе ``order_processing``.

  При использовании оффлайн-оплаты зваершение заказа как подтверждённого либо отменённого проходит в этом же методе.

  При использовании онлайн-оплаты покупатель редиректится на страницу оплаты. Затем при успешном или НЕуспешном завершении оплаты покупатель перенаправляется обратно на сайт на соотв. URL (``api/payment/success/`` или ``/api/payment/error/``). Дальнейшая обработка заказа проходит в методе ``payment_handler``, который проверяет статус проведённой ранее онлайн-оплаты с помощью метода ``success_or_error``, который, в свою очередь, завершает заказ как подтверждённый либо отменённый.

*******************************
Работа с заказом в админ-панели
*******************************

Администратор в разделе :doc:`/bezantrakta/order/admin/order` может открыть подтверждённый заказ и:

* либо **отменить** его (если это заказ БЕЗ онлайн-оплаты),
* либо сделать **возврат** стоимости заказа покупаетлю с его автоматической отменой (если это заказа С онлайн-оплатой).

Также при открытии конкретного заказа возможно **повторно отправить покупателю email-уведомление о заказе**, если он ввёл неправильный email перед подтверждением заказа. Это особенно важно при заказе электронных PDF-билетов, которые покупатель может получить только на свой email.
