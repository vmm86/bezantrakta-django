######################
API сайтов Безантракта
######################

API проекта, используемое при оформлении заказов.

.. todo:: На данный API является "внутренним", т.е. используется только посетителями сайтов Безантракта в браузере и не предусмотрено для REST-взаимодействия с любыми сторонними клиентами (без использования браузера). Однако это можно реализовать, к тому же переписав приложение на основе `Django REST Framework <http://www.django-rest-framework.org/>`_.

*************
Представления
*************

Все представления, если это не оговорено особо, должны возвращать JSON-ответ в виде строки с преобразованными в UTF-8 ASCII-несовместимыми символами.

Сервисы продажи билетов
=======================
Работа с **предварительным резервом** (ПР) при заказе билетов.

Свободные места и цены билетов в событии
----------------------------------------
Получение списка мест и цен на билетов в событии из сервиса продажи билетов.

.. automodule:: api.views.event.seats_and_prices

Попытка удалить ПР из другого события
-------------------------------------
**Единичный заказ действует только в рамках одного события**.

При заходе на шаг 1 заказа билетов если идентификаторы текущего и предыдущего событий не совпадают, старый предварительный резерв из предыдущего события удаляется (если он был сделан ранее).

.. automodule:: api.views.order.prev_order_delete

Инициализация ПР
----------------
При заходе на шаг 1 или 2 заказа билетов происходит инициализация существующего ПР или создание нового пустого ПР.

.. automodule:: api.views.order.initialize

Работа с билетами в ПР
----------------------
Добавление или удаленеи билетов в инициализированном ранее ПР.

.. automodule:: api.views.order.reserve

Изменение типа заказа в ПР
--------------------------
Сохранение в ПР типа будущего заказа при его выборе на шаге 2 заказа билетов.

Вместе с этим каждый раз обновляются реквизиты покупателя.

.. automodule:: api.views.order.change_type

Оформление ПР и создание заказа
-------------------------------
Получение из ПР параметров заказа, контактных данных покупателя и оформление заказа выбранного типа:

* **Заказы с оффлайн-оплатой** (наличными или банковской картой на месте) завершаются в этом же методе с отправкой уведомлений администратору и покупателю.
* **Заказы с онлайн-оплатой** перенаправляются на *платёжную форму*, URL которой приходит в ответе на запрос новой онлайн-оплаты. Завершение оформления заказа в этом случае происходит в представлении ``success_or_error`` в зависимости от результата оплаты (непосредственно на сайте или при работе *cron*-задания ``ps_checkup``, если завершить заказ с онлайн-оплатой на сайте по каким-то причинам не получилось).

.. automodule:: api.views.order.processing

Сервисы онлайн-оплаты
=====================

Проверка и обработка онлайн-оплаты
----------------------------------
После возвращения с платёжной формы при переходе на URL для обработки успешной или НЕуспешной оплаты происходит проверка статуса оплаты с помощью ``success_or_error``:

* Если оплата заказа завершилась **успешно** - редирект на шаг 3 заказ билетов с общей информацией о заказе;
* Если оплата заказа завершилась **НЕуспешно** - редирект на страницу с сообщением об ошибке.

.. automodule:: api.views.payment.payment_handler

Завершение обработки заказа с онлайн-оплатой
--------------------------------------------
* Если оплата заказа завершилась **успешно**:
  * **заказ подтверждается** в СПБ и в базе данных сайта;
  * отправляются email-оповещения администратору и покупателю.
* Если оплата заказа завершилась **НЕуспешно**:
  * **заказ отменяется** в СПБ и в базе данных сайта;
  * формируется сообщение об ошибке для вывода на странице оповещения об ошибке.

.. automodule:: api.views.payment.success_or_error

Предобработка оплаты в СургутНефтеГазБанке
------------------------------------------
В силу специфики оплаты в СургутНефтеГазБанке результаты оплаты предварительно обрабатываются в ``sngb_proxy``, а затем происходит редирект на ``payment_handler``.

.. automodule:: api.views.payment.sngb_proxy
