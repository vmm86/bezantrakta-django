.. _ticket_service_scheme:

Схемы залов
===========

Фильтры:

* текстовый поиск по названию схемы зала.
* фильтр по залам (местам проведения событий), к которым привязаны схемы залов.
* фильтр по сервисам продажи билетов (СПБ), из которых испортируются и к которым привязаны схемы залов.

Действия с выбранными схемами залов:

* удалить.
* пересоздать кэш.

В таблице выводятся все имеющиеся схемы залов с их атрибутами:

* **Название схемы зала**

* **ID** - идентификатор схемы зала в СПБ.

* **Схема зала** - отрисована ли схема зала.

* **Секторы** - добавлены ли привязанные к схеме зала секторы.

* **Сервис продажи билетов**, к которому привязаны схемы залов.

###################
Секторы в хеме зала
###################

В таблице выводятся все имеющиеся :ref:`секторы <ticket_service_scheme_sector>`, привязанные к конкретной схеме зала с их атрибутами:

* **Название сектора**

* **ID сектора**

* **Сектор в схеме зала** - редактор для отрисовки сектора.

Отрисовка схем залов
--------------------

Схема зала в HTML создаётся, как правило, на основе таблиц. Возможно использование `SVG <https://developer.mozilla.org/ru/docs/Web/SVG>`_ в тех случаях, когда это необходимо.

У родительского элемента всей схемы зала (``<table>`` или ``<svg>``) обязательно указывать класс stagehall.

Схемы бывают 2-х типов:

* **обычная схема зала**, в которой содержатся места для выбора покупателем.
* **посекторная схема зала** со ссылками на схемы отдельных секторов, которые добавляются отдельно и привязываются к этой посекторной схеме.

Посекторную схему имеете смысл создавать, если зал достаточно большой и одновременное отображение всего зала сразу неудобно для покупателя.

Сначала создаётся и сохраняется посекторная схема, а затем в привязке к ней добавляются содержащиеся в ней секторы.

В посекторной схеме нужно добавлять кнопки со ссылками на открытие схем всех её секторов. Для этого ячейка с классом ``sector`` должна содержать тег ``<span>`` с классом ``sector-button``, а внутри него - радиокнопка (тег ``<input>`` с атрибутами ``type="radio"`` и ``name="sectors"``) с идентификатором ``sector-NNN`` и привязанный к радиокнопке ``<label>`` c атрибутом ``for="sector-NNN"``, содержащий название сектора. ``NNN`` - это идентификатор схемы конкретного сектора в базе данных сайта.

Идентификатор схемы сектора в базе данных сайта НЕ обязательно должен совпадать с идентификатором сектора в сервисе продажи билетов. Возможно создать несколько схем сектров, содержащих места одного сектора в сервисе продажи билетов (например, в Зелёном театре в Воронеже), если сектор визуально явно разбит на разные группы мест. В этом случае, разные группы мест в секторе, например, ``123`` будут хранится в разных схемах секторов, например, ``1231``, ``1232`` и ``1233``.

Для специфических элементов схемы зала/сектора указываются соответствующие классы:

* ``stage`` - сцена,
* ``sector`` - название сектора, номер ряда или прочее примечание,
* ``seat`` - кликабельное место, которое также содержит data-атрибуты места из схемы в сервисе продажи билетов:

  Для каждого кликабельного места нужно указывать атрибут ``data-ticket-id``, содержащий идентификатор билета:

  * в СуперБилет - сочетание ID сектора, ID ряда и ID места (например, ``509_1_5``),
  * в Радарио - ID места (например, ``18``).

Остальные ``data``-атрибуты (в первую очередь цена) подгружаются к каждому доступному для заказа месту при периодическом обновлении схемы зала на шаге 1 заказа билетов.

Места без фиксированной рассадки удобно делать пунктами ``<li>`` маркированных списков ``<ul>`` с классом ``no-fixed-seats``. При наличии этого класса у списка все места внутри него при загрузке схемы зала автоматически получают атрибут ``data-is-fixed`` со значением ``true`` и становятся **местами без фиксированной рассадки**. Такое место выводится в HTML-корзине заказа и в email сообщениях как "*название сектора, цена*" (без ряда и места, которые в этом случая не имеют значения).

Если в настройках СПБ указана опция ``hide_sold_non_fixed_seats`` со значением ``true``, тогда после загрузки страницы видимыми останутся только свободные для продажи места без фиксированной рассадки, а оставшиеся без возможности продажи места будут скрыты.

Если в сервисе продажи билетов у мест без фиксированной рассадки нет уникальных идентификаторов (Радарио), в схеме зала создаётся необходимое количество мест, у которых ID ряда равны ``0``, а ID билета нумеруются по порядку, начиная с ``1``.
