import logging
from mail_templated import EmailMessage

from django.conf import settings
from django.core.mail.backends.smtp import EmailBackend

from project.cache import cache_factory
from project.shortcuts import timezone_now

from bezantrakta.eticket.shortcuts import render_eticket

from bezantrakta.order.models import Order
from bezantrakta.order.settings import ORDER_DELIVERY, ORDER_PAYMENT, ORDER_STATUS


def success_or_error(domain, event, order, payment_status):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –∏–ª–∏ –ù–ï—É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã.

    Args:
        domain (dict): –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ.
        event (dict): –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—ã—Ç–∏–∏.
        order (dict): –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ.
        payment_status (dict): –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã.

    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å ``result`` —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É—Å–ø–µ—à–Ω–æ–º –∏–ª–∏ –ù–ï—É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ —Å –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–æ–π.

            –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ``result``:
                * **success** (bool): –£—Å–ø–µ—à–Ω–æ–µ (``True``) –∏–ª–∏ –ù–ï—É—Å–ø–µ—à–Ω–æ–µ (``False``) –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.
                * **messages** (list): –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–ª—É—á–∞–µ –ù–ï—É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞. –°–ø–∏—Å–æ–∫ –∏–∑ —Å–ª–æ–≤–∞—Ä–µ–π —Å –∫–ª—é—á–∞–º–∏ ``level`` (—É—Ä–æ–≤–µ–Ω—å –æ—à–∏–±–∫–∏) –∏ ``message`` (—Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ).
    """
    # –ó–∞–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–∑–∞—Ä–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –∏–ª–∏ –ù–ï—É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    result = {}
    result['success'] = None
    result['messages'] = []

    logger = logging.getLogger('bezantrakta.order')

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
    customer = {}
    customer['delivery'] = order['delivery']
    customer['payment'] = order['payment']
    customer['name'] = order['name']
    customer['email'] = order['email']
    customer['phone'] = order['phone']

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
    ticket_service = cache_factory('ticket_service', event['ticket_service_id'])
    # –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
    ts = ticket_service['instance']

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã
    payment_service = cache_factory('payment_service', event['payment_service_id'])

    # –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ
    if payment_status['success']:
        logger.info('\n–û–ø–ª–∞—Ç–∞ {payment_id} –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ'.format(payment_id=order['payment_id']))

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
        logger.info('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤...')
        order_payment = ts.order_payment(
            event_id=event['id'],
            order_uuid=order['order_uuid'],
            order_id=order['order_id'],
            payment_id=order['payment_id'],
            payment_datetime=timezone_now(),
            tickets=order['tickets'],
        )
        # –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
        if order_payment['success']:
            result['success'] = True

            logger.info('–ó–∞–∫–∞–∑ {order_id} –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π'.format(
                order_id=order['order_id']
                )
            )

            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞ –≤ –ë–î
            order['status'] = 'approved'
            Order.objects.filter(id=order['order_uuid']).update(status=order['status'])

            logger.info('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {status}\n'.format(
                status=ORDER_STATUS[order['status']]['description'])
            )

            # –ß–µ–ª–æ–≤–µ–∫–æ–ø–æ–Ω—è—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            customer['delivery_description'] = ORDER_DELIVERY[customer['delivery']]
            customer['payment_description'] = ORDER_PAYMENT[customer['payment']]
            customer['status_color'] = ORDER_STATUS[order['status']]['color']
            customer['status_description'] = ORDER_STATUS[order['status']]['description']

            # –û—Ç–ø—Ä–∞–≤–∫–∞ email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é
            from_email = {}
            from_email['user'] = ticket_service['settings']['order_email']['user']
            from_email['pswd'] = ticket_service['settings']['order_email']['pswd']
            from_email['connection'] = EmailBackend(
                host=settings.EMAIL_HOST,
                port=settings.EMAIL_PORT,
                username=from_email['user'],
                password=from_email['pswd'],
                use_tls=settings.EMAIL_USE_TLS,
            )

            email_context = {
                'domain': domain,
                'event': event,
                'ticket_service': ticket_service,
                'payment_service': payment_service,
                'order': order,
                'customer': customer
            }

            admin_email = EmailMessage(
                'order/email_admin.tpl',
                email_context,
                from_email['user'],
                (from_email['user'],),
                connection=from_email['connection']
            )
            customer_email = EmailMessage(
                'order/email_customer.tpl',
                email_context,
                from_email['user'],
                (customer['email'],),
                connection=from_email['connection']
            )

            # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤ –∏ –∏—Ö –≤–ª–æ–∂–µ–Ω–∏–µ –≤ –ø–∏—Å—å–º–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é
            if customer['delivery'] == 'email':
                logger.info('\n–°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö PDF-–±–∏–ª–µ—Ç–æ–≤...')
                for t in order['tickets']:
                    t.update(event)
                    # logger.info('\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏–ª–µ—Ç–µ:')
                    # logger.info(t)
                    pdf_ticket_file = render_eticket(t)
                    customer_email.attach_file(pdf_ticket_file, mimetype='application/pdf')

            admin_email.send()
            logger.info('Email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
            customer_email.send()
            logger.info('Email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
        # –ó–∞–∫–∞–∑ –ù–ï —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
        else:
            result['success'] = False

            logger.info('–ó–∞–∫–∞–∑ {order_id} –ù–ï —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π'.format(
                order_id=order['order_id']
                )
            )

        return result
    # –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –ù–ï—É—Å–ø–µ—à–Ω–æ
    else:
        logger.info('\n–û–ø–ª–∞—Ç–∞ {payment_id} –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –ù–ï—É—Å–ø–µ—à–Ω–æ'.format(payment_id=order['payment_id']))

        result['success'] = False

        # –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
        logger.info('–û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤...')
        order_delete = ts.order_delete(
            event_id=event['id'],
            order_uuid=order['order_uuid'],
            order_id=order['order_id'],
            tickets=order['tickets'],
        )

        # –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –æ—Ç–º–µ–Ω—ë–Ω–Ω—ã–π –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
        if order_delete['success']:
            logger.info('–ó–∞–∫–∞–∑ {order_id} –æ—Ç–º–µ–Ω—ë–Ω –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤'.format(
                order_id=order['order_id']
                )
            )

            # –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ –≤ –ë–î
            order['status'] = 'cancelled'
            Order.objects.filter(id=order['order_uuid']).update(status=order['status'])

            logger.info('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {status}'.format(
                status=ORDER_STATUS[order['status']]['description'])
            )
        # –ó–∞–∫–∞–∑ –ù–ï —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –æ—Ç–º–µ–Ω—ë–Ω–Ω—ã–π –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
        else:
            logger.info('–ó–∞–∫–∞–∑ {order_id} –ù–ï —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤'.format(
                order_id=order['order_id']
                )
            )

        # –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–ª–∏ –≤ –ª–æ–≥-—Ñ–∞–π–ª–µ
        messages = [
            {'level': 'error', 'message': '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–ø–ª–∞—Ç—ã –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. üòû'},
            {'level': 'error', 'message': '{code} {message}'.format(
                code=payment_status['error_code'],
                message=payment_status['error_message']
            )},
            {'level': 'info',  'message': 'üëâ <a href="{event_url}">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –±–∏–ª–µ—Ç—ã –µ—â—ë —Ä–∞–∑</a>.'.format(
                event_url=event['url']
            )},
        ]

        for msg in messages:
            result['messages'].append(msg)

        return result
