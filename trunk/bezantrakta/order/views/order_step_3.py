import uuid

from django.conf import settings
from django.shortcuts import redirect, render

from project.cache import cache_factory
from project.shortcuts import message, render_messages

from ..order_basket import OrderBasket


def order_step_3(request, order_uuid):
    """–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∏–ª–∏ –ù–ï—É—Å–ø–µ—à–Ω–æ–º –∑–∞–∫–∞–∑–µ.

    Args:
        order_uuid (str): –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞.
    """
    try:
        order_uuid = uuid.UUID(order_uuid)
    except (TypeError, ValueError):
        order_uuid = None

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    if not order_uuid:
        msgs = [
            message('error', '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ - —Ç–∞–∫–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. üôÅ'),
            message('info', 'üëâ <a href="/">–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.'),
        ]
        render_messages(request, msgs)
        return redirect('error')

    basket = OrderBasket(order_uuid=order_uuid, logger='bezantrakta.order')
    if not basket or not basket.order:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        msgs = [
            message('error', '–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑–µ—Ä–≤ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. üôÅ'),
            message('info', 'üëâ <a href="/">–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.'),
        ]
        render_messages(request, msgs)
        return redirect('error')

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—ã—Ç–∏–∏ –∏–∑ –∫—ç—à–∞
    event = cache_factory('event', basket.order['event_uuid'])

    # –í—ã–≤–æ–¥ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ
    order_info = []
    order_info.append({'key': '–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:', 'value': basket.order['order_id']})

    order_info.append({
        'key': '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞:',
        'value': '<span style="color: {color};">{description}</span>'.format(
            color=basket.order['status_color'],
            description=basket.order['status_caption'],
        )
    })
    order_info.append({'key': '–ü–æ–ª—É—á–µ–Ω–∏–µ:', 'value': basket.order['delivery_caption']})
    if basket.order['delivery'] == 'courier':
        order_info.append({'key': '–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:', 'value': basket.order['customer']['address']})
    order_info.append({'key': '–û–ø–ª–∞—Ç–∞:',    'value': basket.order['payment_caption']})

    if basket.order['payment'] == 'online' and basket.order['status'] == 'approved':
        order_info.append({'key': '–ù–æ–º–µ—Ä –æ–ø–ª–∞—Ç—ã:', 'value': basket.order['payment_id']})

    context = {}

    context['event'] = event
    context['order'] = basket.order
    context['order_info'] = order_info

    basket.delete()

    # –†–∞–∑—Ä–µ—à—ë–Ω –ª–∏ –≤—ã–≤–æ–¥ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    cookie_debugger = request.COOKIES.get(settings.BEZANTRAKTA_COOKIE_WATCHER_TITLE, None)
    context['watcher'] = True if cookie_debugger == settings.BEZANTRAKTA_COOKIE_WATCHER_VALUE else False

    return render(request, 'order/order_step_3.html', context)
