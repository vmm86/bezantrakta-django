import datetime

from django.db.models import CharField, BooleanField, F, Case, When, Value
from django.shortcuts import render
from django.utils import timezone

from project.shortcuts import add_small_vertical_poster

from ..models import Event, EventLinkBinder, EventGroupBinder


today = timezone.now()


def event(request, year, month, day, hour, minute, slug):
    """
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è

    –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π (–ø—Å–µ–≤–¥–æ–∫–æ–¥):
    try event: –ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏—è –≤ –ë–î –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
        ...
    except: –°–æ–±—ã—Ç–∏—è –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
        [ –û—à–∏–±–∫–∞ 404 ]
    else: –°–æ–±—ã—Ç–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
        if event.is_published: –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ
            if event.is_coming: –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ –µ—â—ë –ù–ï –ø—Ä–æ—à–ª–æ
                [ –í—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –±–∏–ª–µ—Ç–æ–≤ ]
            else: –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ —É–∂–µ –ø—Ä–æ—à–ª–æ
                [ –¢–æ–ª—å–∫–æ –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—ã—Ç–∏–∏ ]
        else: –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ
            if event.is_coming: –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ –µ—â—ë –ù–ï –ø—Ä–æ—à–ª–æ
                [ –û—à–∏–±–∫–∞ 403 ]
            else: –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ —É–∂–µ –ø—Ä–æ—à–ª–æ
                [ –û—à–∏–±–∫–∞ 410 ]
    """
    current_timezone = request.city_timezone
    event_datetime = datetime.datetime(
        year=int(year),
        month=int(month),
        day=int(day),
        hour=int(hour),
        minute=int(minute),
    )
    event_datetime_localized = current_timezone.localize(event_datetime)

    # –ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏—è –≤ –ë–î –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
    try:
        event = Event.objects.select_related(
            'event_venue',
            'domain'
        ).annotate(
            venue=F('event_venue__title'),
            venue_city=F('event_venue__domain__city__title'),
            is_coming=Case(
                When(datetime__gt=today, then=Value(True)),
                default=False,
                output_field=BooleanField()
            ),
            group_id=Case(
                When(event_group__isnull=False, then=F('event_group')),
                default=None,
                output_field=CharField()
            ),
        ).values(
            'is_published',
            'is_coming',
            'group_id',
            'title',
            'slug',
            'description',
            'keywords',
            'text',
            'datetime',
            'venue',
            'venue_city',
        ).get(
            datetime=event_datetime_localized,
            slug=slug,
            domain_id=request.domain_id,
        )
    # –°–æ–±—ã—Ç–∏–µ –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
    except Event.DoesNotExist:
        context = {
            'title': """–°–æ–±—ã—Ç–∏–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç""",
            'message': """<p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. üôÅ</p>
            <p>üëâ <a href="/">–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.</p>""",
        }
        return render(request, 'empty.html', context, status=404)
    # –°–æ–±—ã—Ç–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
    else:
        # –°–æ–±—ã—Ç–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ
        if event['is_published']:
            context = {}

            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –∞—Ñ–∏—à–∏ –ª–∏–±–æ –∑–∞–≥–ª—É—à–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            add_small_vertical_poster(request, event)

            # –ó–∞–ø—Ä–æ—Å —Å—Å—ã–ª–æ–∫ –≤ —ç—Ç–æ–º —Å–æ–±—ã—Ç–∏–∏
            try:
                links = EventLinkBinder.objects.select_related(
                    'event_link',
                    'event',
                    'domain'
                ).annotate(
                    title=F('event_link__title'),
                    img=F('event_link__img'),
                ).filter(
                    event__is_published=True,
                    event__datetime=event_datetime_localized,
                    event__slug=slug,
                    event__domain_id=request.domain_id,
                ).values(
                    'title',
                    'href',
                    'img',
                )
            # –°—Å—ã–ª–æ–∫ –Ω–µ—Ç
            except EventLinkBinder.DoesNotExist:
                pass
            # –°—Å—ã–ª–∫–∏ –µ—Å—Ç—å
            else:
                context['links'] = links

            # –ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏–π –≤ –≥—Ä—É–ø–ø–µ, –µ—Å–ª–∏ —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É
            if event['group_id']:
                group_events = EventGroupBinder.objects.select_related(
                    'event_group',
                    'event',
                    'domain',
                ).annotate(
                    title=F('event__title'),
                    slug=F('event__slug'),
                    datetime=F('event__datetime'),
                    venue=F('event__event_venue__title'),
                ).filter(
                    event_group=event['group_id'],
                    event__is_published=True,
                    event__datetime__gt=today,
                    event__domain_id=request.domain_id,
                ).values(
                    'title',
                    'slug',
                    'datetime',
                    'venue',
                )
                context['group_events'] = group_events

            context['event'] = event
            return render(request, 'event/event.html', context)
        # –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ
        else:
            # –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ –µ—â—ë –ù–ï –ø—Ä–æ—à–ª–æ
            if event['is_coming']:
                context = {
                    'title': """–°–æ–±—ã—Ç–∏–µ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ""",
                    'message': """<p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ –µ—â—ë –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ.</p>
                    <p>üëâ –ó–∞–π–¥–∏—Ç–µ –ø–æ–∑–¥–Ω–µ–µ –∏–ª–∏ <a href="/">–Ω–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.</p>""",
                }
                return render(request, 'empty.html', context, status=403)
            # –°–æ–±—ã—Ç–∏–µ –ù–ï –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –∏ —É–∂–µ –ø—Ä–æ—à–ª–æ
            else:
                context = {
                    'title': """–°–æ–±—ã—Ç–∏–µ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ""",
                    'message': """<p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ —É–∂–µ –ø—Ä–æ—à–ª–æ –∏ —Å–Ω—è—Ç–æ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. üôÅ</p>
                    <p>üëâ <a href="/">–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.</p>""",
                }
                return render(request, 'empty.html', context, status=410)
