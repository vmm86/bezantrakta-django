# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-02 10:48
from __future__ import unicode_literals

import bezantrakta.event.models.link
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('event', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=32, verbose_name='Название')),
                ('slug', models.SlugField(max_length=32, verbose_name='Псевдоним')),
                ('img', models.ImageField(blank=True, null=True, upload_to=bezantrakta.event.models.link.img_path, verbose_name='Логотип')),
            ],
            options={
                'verbose_name_plural': 'ссылки',
                'verbose_name': 'ссылка',
                'db_table': 'bezantrakta_event_link',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='EventLinkBinder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.URLField(blank=True, verbose_name='Внешняя ссылка')),
                ('order', models.PositiveSmallIntegerField(default=1, verbose_name='Порядок')),
            ],
            options={
                'verbose_name_plural': 'связь событий и ссылок',
                'db_table': 'bezantrakta_event_link_binder',
                'verbose_name': 'связь событий и ссылок',
                'ordering': ('order', 'event', 'event_link'),
            },
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'ordering': ('domain', 'datetime', 'title'), 'verbose_name': 'событие', 'verbose_name_plural': 'события'},
        ),
        migrations.AlterModelOptions(
            name='eventcategory',
            options={'ordering': ('title',), 'verbose_name': 'категория событий', 'verbose_name_plural': 'категории событий'},
        ),
        migrations.AlterModelOptions(
            name='eventcontainer',
            options={'ordering': ('order', 'is_published', 'title'), 'verbose_name': 'контейнер', 'verbose_name_plural': 'контейнеры'},
        ),
        migrations.AlterModelOptions(
            name='eventcontainerbinder',
            options={'verbose_name': 'связь событий и контейнеров', 'verbose_name_plural': 'связь событий и контейнеров'},
        ),
        migrations.AlterModelOptions(
            name='eventgroup',
            options={'ordering': ('id', 'title'), 'verbose_name': 'группа событий', 'verbose_name_plural': 'группы событий'},
        ),
        migrations.AlterModelOptions(
            name='eventgroupbinder',
            options={'verbose_name': 'связка событий и групп событий', 'verbose_name_plural': 'связки событий и групп событий'},
        ),
        migrations.AlterModelOptions(
            name='eventvenue',
            options={'ordering': ('domain', 'title'), 'verbose_name': 'зал', 'verbose_name_plural': 'залы'},
        ),
        migrations.AddField(
            model_name='eventlinkbinder',
            name='event',
            field=models.ForeignKey(db_column='event_id', on_delete=django.db.models.deletion.CASCADE, to='event.Event', verbose_name='Событие'),
        ),
        migrations.AddField(
            model_name='eventlinkbinder',
            name='event_link',
            field=models.ForeignKey(db_column='event_link_id', on_delete=django.db.models.deletion.CASCADE, to='event.EventLink', verbose_name='Ссылки'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_link',
            field=models.ManyToManyField(blank=True, through='event.EventLinkBinder', to='event.EventLink', verbose_name='Ссылки, добавленные к событию'),
        ),
        migrations.AlterUniqueTogether(
            name='eventlinkbinder',
            unique_together=set([('event', 'event_link')]),
        ),
    ]
