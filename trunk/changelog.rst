#################
История изменений
#################

.. only:: dev

  Разные версии проекта хранятся в разных *SVN*-тегах в папке репозитория ``tags``.

**********
Версии 3.x
**********
.. only:: dev

  Работа с заказом билетов переведена с клиентской стороны на сервер.

Версия 3.7
==========
В админ-панели в разделах "*Схемы залов*" и "*Секторы в схемах залов*" в HTML-редакторе добавлена специальная панель для того, чтобы **рисовать схемы залов**, импортированные из подключенных к сайтам сервисов продажи билетов.

На сайте **НЕ показываются афиши тестовых событий** (выводятся только в тестовой версии для разработчиков). Событие является тестовым, если в его JSON-настройках задан логический параметр ``test`` со значением ``true``. На страницы тестовых событий можно заходить напрямую из админ-панели, нажимая на кнопку "*Смотреть на сайте*".

Версия 3.6
==========
В админ-панели добавлена возможность * **отменить подтверждённый заказ с оффлайн-оплатой** (наличными или банковской картой на месте, БЕЗ онлайн-оплаты). При отмене заказа *забронированные места вновь освобождаются* для последующей продажи.

Доработаны возвраты в СургутНефтеГазБанке.

Версия 3.5
==========
В админ-панели добавлена возможность:

* сделать **возврат стоимости подтверждённого заказа** (по запросу покупателя или при переносе/отмене события).
* **повторно отправить сообщение о подтверждённом заказе покупателю** (с вложенными электронными билетами, если они были заказаны), например, если покупатель в ходе заказа ввёл неверный email-адрес.

В настройках событий добавлены опциональные параметры:

* ``redirect`` для перенесённых событий, чтобы перенаправлять пользователя, открывшего страницу старого неактуального события, на страницу нового перенесённого события.
* Добавлена **возможность наложения сообщений на афиши** при показе на сайте (в случае переноса или отмены события и др.).

.. only:: dev

  Таймаут в секундах на очередной запрос *WSDL* при работе с СуперБилет увеличен до **30 дней**.

  На шаге 2 заказа билетов добавлен вывод сообщения об ошибке с рекомендацией включить *cookies* в браузере в случае, если из *cookies* не удаётся получить идентификаторы события и заказа для его оформления.

Версия 3.4
==========
Настроен список и порядок столбцов с их русскоязычными названиями при экспорте заказов в админ-панели. Экспортировать данные можно в форматах **CSV**, **XLS** (*Microsoft Excel*), **ODS** (*LibreOffice*). Заказы при экспорте сортируются по дате события по убыванию.

Добавлена возможность **скачать файлы PDF-билетов** в админ-панели (с списке заказов или в списке билетов в заказах).

Общая сумма заказа с сервисным сбором для удобства расчётов **округляется до 50 рублей** при оффлайн-оплате (наличными или банковской картой в кассе или курьеру).

Поле для ввода адреса для курьерской доставки перемещено наверх к остальным полям с реквизитами покупателя.

Откорректирован вывод информации в email-сообщениях администоратору и покупателю.

.. only:: dev

  В классе ``SuperBilet`` отслеживается базовое исключение ``Error`` расширения *zeep*, чтобы поймать максимум возможных ошибок в работе с *SOAP*-подключениями.

  Правильное условное включение возможности импорта данных только в *development*-окружении (экспорт в любом случае возможен).

  Все *context processors* приложений для единообразия преобразованы из модулей в пакеты.

Версия 3.3
==========
Возможность загружать SVG-иконки гербов городов в папку ``MEDIA`` вместо статических файлов.

Возможность интегрировать сторонние js-скрипты в шаблон сайта, добавляя их в параметре ``custom_scripts`` в настройках конкретного сайта.

.. danger:: Будьте крайне внимательны при интеграции сторонних скриптов на сайт! При невнимательности или по незнанию возможно интегрировать на сайт потенциально опасные скрипты.

.. only:: dev

  Основа для написания двух видов документации - для администраторов админ-панели ``docs/adm`` и для разработчиков ``docs/dev``.

Версия 3.2
==========
Изменения в админ-панели:

.. only:: adm

  * Добавлена **возможность импорта/экспорта** записей из базы данных сайтов, пока только для событий и заказов.
  * Выпадающий список в заголовке админ-панели теперь содержит **не только сайты, но и города, к которым пока не привязан ни один сайт** для того, чтобы создавать залы в городах, к которым пока не привязано ни одного сайта.
  * Уточнено содержание заголовка страницы на разных страницах в админ-пенели.

.. only:: dev

  * Добавлен плагин ``django-import-export`` для импорта/экспорта записей базы данных, пока только в моделях ``Event`` ``Order``.
  * Фильтр в заголовке админ-панели ``choose_domain_or_city`` - не только для всех сайтов, но и для городов, к которым пока не привязан ни один сайт (чтобы открывать залы в городах, в которых пока не создано ни одного сайта).
  * Уточнено содержание тега ``<title>`` на разных страницах в админ-пенели.

  Небольшое текстовое описание заказа на шагах 1 и 2 хранится в отдельных шаблонах в приложении ``order``.

Версия 3.1
==========
Откорректирован алгоритм сопоставления штрихкодов, полученных при создании заказа в Радарио, с билетами, находящимся в заказе.

.. only:: dev

  Логика привязки штрих-кодов работает по-разному для билетов С фиксированной рассадкой и БЕЗ фиксированной рассадки.

Версия 3.0
==========
Серьёзно переписана логика работы с заказом - **работа с заказом перенесена с клиента на сервер**:

* С одной стороны, это позволяет избежать возможных проблем с предварительным резервом в браузере (как манипуляция заказом, так и невозможность его сохранения по умолчанию в браузере *Safari* на *Mac OS X* и *iOS*).
* С другой стороны, логика работы с заказом сосоредоточена в одном месте - это облегчает возможные изменения при необходимости их внести.

.. only:: dev

  Изменена структура проекта - обработчики всех 3-х шагов заказа билетов для удобства понимания работы с заказом собраны в приложении ``order`` и называются ``order_step_1``, ``order_step_2`` и ``order_step_3``. В то же время 1 заказа билетов также является и страницей с информацией о событии, за которые отвечает приложение ``event``.

  Для сосредоточения работы с заказом в одном месте создан класс ``OrderBasket``. Класс содержит атрибут ``order`` с текущим состоянием конкертного заказа и методы для манипуляции заказом (создать, получить или удалить заказ; добавить или удалить билет в заказе; рассчитать общую сумму заказа и т.п.).

  Работа с внутренним API сайта, которое используется для проведения заказов, перенесена в отдельное приложение ``api`` в корне проекта. Виды разбиты по пакетам (``event``, ``order``, ``payment``). Одни представления возвращают *JSON* для работы с оформлением заказа на клиентской стороне, другие представления возвращают структуры данных *Python* для последующего использования.

  Для привязки билетов к схеме зала введён единый строковый идентификатор ``ticket_id``. В СуперБилете он генерируется как *сочетание идентификаторов сектора, ряда и места*, а в Радарио - *идентификатор места* как такового.

  Кэшировать информацию возможно не только из БД, но и направляя на вход ``cache_factory`` произвольную структуру данных (словарь) в параметре ``obj``. Таким образом кэшируются запросы свободных мест и списка цен в событиях и состояние предварительного резерва.

  API Радарио обновлено до версии 1.1. При работе с новой версией отпала необходимость работы с секторами ``zones``, привязанными к схемам залов ``scheme``. Поэтому теперь излишняя сущность ``price_group`` переименована в ``sectors`` (динамические группы билетов с одинаковой ценой, НЕ привязанные к схеме зала).

.. only:: adm

  Запросы списка свободных мест и списка цен в каждом событии **делаются единожды на сервере**, а не из каждого браузера, в котором открыто конкретное событие. Это позволяет снизить нагрузку на работу сервиса продажи билетов.

.. only:: dev

  Запросы списка свободных мест и списка цен в каждом событии ``seats_and_prices`` теперь кэшируются в файловом кэше. Запрос к сервису продажи билетов при истечении таймаута каждый раз делается единожды на сервере, а не из каждого клиента, в котором открыто конкретное событие.

.. only:: adm

  В списке заказов хранится не только поле "**Сумма**" (сумма цен на все билеты в заказе), но и поле "**Всего**" (общая сумма заказа с учётом возможных наценок или скидок).

.. only:: dev

  В модели ``Order`` добавлено поле ``overall``. Поле ``total`` содержит сумму цен на все билеты в заказе, а поле ``overall`` - общую сумму заказа с учётом возможных наценок или скидок.

**********
Версии 2.x
**********
.. only:: dev

  Работа с заказом билетов проходит на стороне клиента (в браузере пользователя с использованием cookies).

Версия 2.23
===========
Добавлен функционал работы с сервисным сбором при заказе билетов.

Версия 2.22
===========
Добавлены кастомные **JSON-настройки в событиях**. На данный момент настройки содержат:

* возможность в отдельном событии *включать/отключать варианты заказа билетов в отдельных событиях* в параметре ``order``, который переопределяет содержимое такого же параметра ``order`` в JSON-настройках сервиса продажи билетов. Если тот или иной вариант заказа билетов включен в настройках сервиса продажи билетов, но отключен в настройках события - он НЕ будет отображаться на шаге 2 заказа билетов.
* возможность в отдельном событии задать *сервисный сбор в процентах от цены каждого билета в заказе* для разных вариантов заказа билетов в параметре ``extra``. По умолчанию сервисный сбор равен 0 и в этом случае НЕ используется. Если сервисный сбор больше 0 - к общей сумме заказа добавляется указанный процент от цены каждого из билетов в заказе.

.. only:: dev

  JSON-настройки в других приложениях (``location``, ``ticket_service``, ``payment_service``) также формируются "на лету" из содержимого модуля ``settings.py`` в соответствующем приложении, а не из текстового json-файла, что позволяет создавать ключи в нужном порядке при использовании ``OrderedDict``.

Версия 2.21
===========
.. only:: adm

  При выполнении задания на импорт информации из сервисов продажи билетов в импортированных ранее группах/событиях *обновляется только изменившееся информация* - та информация, которая изменилась в сервисе продажи билетов и соответственно должна быть изменена и на сайте.

.. only:: dev

  При выполнении задания ``ts_discover`` в импортированных ранее (уже имеющихся в базе данных) группах/событиях *обновляется только изменившееся информация*- та информация, которая изменилась в сервисе продажи билетов и соответственно должна быть изменена и в базе данных.

Версия 2.20
===========
Добавлена возможность указывать реквизиты **промоутеров** (организаторы событий) и **агентов** (продавцы билетов) для вывода в шаблоне PDF-билета. В настройках сервиса продажи билетов добавлены параметры ``promoter`` и ``seller`` как значения по умолчанию для всех его событий. В свою очередь, в событиях добавлены поля ``promoter`` и ``seller``, специфичные для каждого события. НЕпустые параметры в событии имеют более высокий приоритет по сравнению со значениями по умолчанию в сервисе продажи билетов.

Версия 2.19
===========
Оптимизация завершения оформления заказа при использовании онлайн-оплаты.

.. only:: adm

  Проверка статуса онлайн-оплаты выполняется как при возвращении на сайт с формы онлайн-оплаты, так и при запуске задания на проверку незавершённых онлайн-оплат. В обоих случаях статус конкретной онлайн-оплаты проверяется, затем заказ в зависимости от результата проверки подтверждается либо отменяется.

.. only:: dev

  Проверка статуса онлайн-оплаты вынесена в отдельную функцию ``success_or_error``. Она выполняется как при выполнении ``payment_handler`` (возвращение на сайт с формы онлайн-оплаты), так и при запуске ``ps_checkup`` (задание на проверку незавершённых онлайн-оплат). В обоих случаях статус онлайн-оплаты проверяется, затем заказ в зависимости от результата подтверждается либо отменяется.

  Если метод подтверждения либо отмены заказа в сервисе продажи билетов НЕ завершился успешно, заказ остаётся в статусе "*создан*" до следующего запуска задания ``ps_checkup``.

Версия 2.18
===========
.. only:: adm

  Работа с информацией о географии сайта (города и сайты).

.. only:: dev

  Кэширование информации о географии сайта (города и сайты), в первую очередь для использования в ``bezantrakta.location.middleware.CurrentLocationMiddleware``.

Версия 2.17
===========

.. only:: adm

  Оптимизирован механизм работы с событиями и группами.

  * При показе группы на сайте **некоторые атрибуты группы заменяются на атрибуты самого раннего актуального события в ней**, на которое должна вести афиша группы при её показе в каком-либо контейнере (в том числе в маленьких вертикальных афишах "*на главной*");
  * При показе события на сайте **некоторые атрибуты события заменяются на атрибуты его группы, если событие в неё входит**, чтобы НЕ редактировать множество дочерних событий, некоторые атрибуты которых можно единожды указать в их родительской группе.

  **Одно и то же событие нельзя добавить более чем в одну группу!**. В группу можно добавить только те актуальные события, которые ещё НЕ были добавлены в другую группу.

.. only:: dev

  Переработано кэширование событий/групп с переопределением некоторых их параметров, а также их вывод на сайте.

  При кэшировании информации о группе в её кэш добавляется список UUID актуальных событий в ней ``events_in_group``, а также UUID самого раннего актуального события в ней на данный момент ``earliest_published_event_in_group``.

  При получении кэша группы **некоторые атрибуты группы заменяются на атрибуты её самого раннего актуального события**, на которое должна вести афиша группы при её показе в каком-либо контейнере (в том числе в маленьких вертикальных афишах "на главной").

  При получении кэша события **некоторые атрибуты события подменяются на атрибуты группы, если событие в неё входит**, чтобы НЕ редактировать множество дочерних событий, некоторые атрибуты которых можно единожды указать в их родительской группе.

  При обновлении кэша группы принудительно обновляется кэш всех её актуальных событий. При обновлянии кэша события принудительно обновляется кэш её группы, если событие в неё входит.

Добавлена работа с сервисом онлайн-оплаты в **СургутНефтеГазБанк** (СНГБ).

Версия 2.16
===========

.. only:: adm

  Работа с кэшированием информации на сайте.

.. only:: dev

  Серьёзная переработка серверного кэширования объектов моделей разных приложений проекта. Создан единый абстрактный родительский класс-адаптер ``ProjectCache``, которому наследуют конкретные классы для кэширования в каждом отдельном приложении. Предварительно обработанный кэш возвращается с помощью фабрики``cache_factory``. Если для работы со сторонним сервисом (продажи билетов или онлайн-оплаты) необходим экземпляр его класса, он добавляется к возвращаемому значению кэша в параметре ``instance``.

Версия 2.15
===========
.. only:: adm

  Существенные коррективы стилей основного сайта и процесса заказа билетов - декостылизация по мере возможности.

.. only:: dev

  Глобальная статика проекта ``project.static`` согласно его базовым настройкам собирается в папку ``global``, поэтому в проекте её содержимое вынесено в папку ``static`` внутри ``project`` без дополнительной ещё одной вложенной папки ``global``. Также в путях ко всем js-плагинам указана их актуальная версия.

  Обновление **jQuery** до версии *3.2.1* и карусели больших горизонтальных афиш на базе **bxSlider** до версии *4.2.12*.

  Добавлен JS-плагин **waypoints** версии *4.0.1* для выполнения событий на странице, когда при прокрутке пользователь достигает того или иного элемента. Например, в админ-панели блок для редактирования экземпляра модели при прокрутке фиксированно позиционируется внизу страницы.

  Скрипт для выбора города и запоминания его в cookie оптимизирован и перенесён из статики в шаблоны проекта.

Версия 2.14
===========
Возможность скрывать места НЕ в продаже в секторах без фиксированной рассадки сделана опциональной значению логического параметра ``hide_sold_non_fixed_seats`` в настройках сервиса продажи билетов.

.. only:: dev

  Метод сервиса продажи билетов ``seats`` переименован в ``seats_and_prices`` для обозначения того, что он возвращает не только освободные места в событии, но и список цен на билеты по возрастанию. Соответственно откорректировано получение минимальной цены в событии при её отсутствии из результата выполнения этого метода в задании ``ts_discover``.

Версия 2.12
===========
Выбор типа сервиса продажи билетов и серваи онлайн-оплаты при создании новых записей в админ-панели для удобства сделан в виде радиокнопок.

Версия 2.11
===========
Список цен на билеты в событии может меняться как при изменении цен в сервисе продажи билетов, так и при продаже всех билетов на какую-то цену. Поэтому список цен теперь НЕ сохраняется в каждом событии в модели ``event.Event``, а *выводится на странице события* вместе со списком свободных для продажи мест в методе ``seats`` и динамически отображается в легенде схемы зала.

.. only:: dev

На шаге 1 заказа билетов появилась возможность в секторах, явно отмеченных как секторы без сидячих мест (маркированные списки ``ul`` с классом ``no-fixed-seats``), *оставлять только актуальные кликабельные места*. Остальные пункты списка удаляются после получения списка свободных для продажи мест с помощью метода ``seats``.

Версия 2.10
===========
В некоторых inline-формах, связанных с базовой формой редактирования экземпляра модели, добавлена иконка для редактирования связанной по внешнему ключу записи в новом окне.

В приложении ``simsim`` добавлены фильтры в выпадающих списках как временная замена дополнению ``django-admin-list-filter-dropdown``. Теперь фильтры работают правильно, отображая только связанные уникальные записи по внешнему ключу в ``RelatedOnlyFieldDropdownFilter``.

Версия 2.9
==========
Некоторая информация из группы переопределяет информацию каждого события, которое привязано к этой группе:

* название
* описание для метатега ``description``
* текстовое описание
* ограничение по возрасту
* афиша в позиции ``small_vertical``

Переопределяемая информация выводится на странице события, принадлежащего группе, а также используется при генерации электронных билетов, заказанных в этом событии.

При фильтрации событий по категориям *у событий в группе можно НЕ указывать категорию* - она также берётся из группы.

Это позволяет **НЕ редактировать каждое из событий в группе**, особенно если они импортируются много и часто, а вместо этого **единожды отредактировать информацию самой группы** и после этого просто *пакетно публиковать события*, вновь добавляемые в неё в админ-панели с помощью группового действия "*Опубликовать или снять в с публикации выбранные события или группы*".

.. only:: dev

  При обновлении кэша группы в админ-панели также обновляется кэш всех её актуальных событий.

Версия 2.8
==========
Большое обновление работы в браузере в ходе процесса заказа билетов.

Версия 2.7
==========
.. only:: adm

  Добавлена возможность создавать **схемы отдельных секторов в больших залах**. Большую схему зала при необходимости можно показывать на шаге 1 заказа билетов как общую схему со ссылками на схемы отдельных секторов (или даже на схемы разных частей одного и того же сектора).

.. only:: dev

  Добавлена модель ``TicketServiceSchemeSector`` для хранения схем отдельных секторов в больших залах.

Версия 2.6
==========
Серьёзная оптимизация задания по импорту информации из подключенных к сайтам сервисов продажи билетов.

.. only:: dev

  Серьёзная оптимизация задания по импорту информации из подключенных к сайтам сервисов продажи билетов. Информация из одного и того же сервиса продажи билетов, подключенного к разным сайтам, **запрашивается только один раз** и хранится во временном кэше в памяти, а затем для того или иного сайта из кэша берётся только нужная для него информация.

Версия 2.5
==========
Афиши в любых контейнерах при равенстве позиций в контейнере *упрядочиваются по дате/времени по возрастанию*.

Перед афишами в больших контейнерах *можно добавлять баннеры* из соответствующих групп баннеров в админ-панели (с произвольными ссылками или без ссылок).

.. only:: dev

  Упрощена генерация абсолютных URL-адресов с помощью функции ``build_absolute_url`` в пакете ``project.shortcuts``. Этой функции на вход передаётся псевдоним (поддомен) текущего сайта, а в ней самой конструируется полный URL с учётом протокола (``HTTP`` или ``HTTPS``), полного домена текущего сайта и опциональной относительной ссылки.

Версия 2.4
==========
В вариантах заказа билетов на шаге 2 в любом случае **выбирается первый (или единственный) из активных вариантов заказа билетов**, даже если покупатель ранее не совершал заказ. Это сделано во избежание ошибок при подтверждении заказа - для того, чтобы какой-то из вариантов заказа уже был выбран автоматически (особенно, если этот вариант - единственный, доступный на сайте).

**При фильтрации событий** на сайте (по дате, по категории или в текстовом поиске) **выводятся только события** (афишами в позиции "*маленькие вертикальные*"), но не группы. Афиши групп выводятся только в конкретных контейнерах, позиции в которых были явно заданы для группы в админ-панели. И группы, и события для показа на сайте **обязательно должны быть опубликованы**!

*Маленькие вертикальные афиши* нужно в любом случае добавлять *для единичных событий* (НЕ входящих в группу) и *для групп*, которые требуется публиковать на сайте. При отсутствии маленькой вертикальной афиши для опубликованного события/группы будет выводиться картинка-заглушка с логотипом Безантракта.

Версия 2.3
==========
В настройках сервиса онлайн-оплаты удалён параметр ``commission_included``. Величина комиссии прибавляется к сумме заказа, только если она НЕ равна ``0``.

В шаблоне шага 2 заказа билетов любые наценки к базовой сумме заказа выводятся в отдельном блоке под блоком "*Всего*" и только в том случае, если эти наценки присутствуют (не равны ``0``).

Версия 2.2
==========
В шаблонах сайта и при проведении заказа билетов **абсолютные ссылки формируются автоматически** с учётом того, работает ли сайт по *HTTP* или *HTTPS*.

.. only:: dev

  Вместе с этим серьёзно переписан шаблон проекта ``index.html`` и шаблоны процесса заказа билетов ``event.html``, ``checkout.html``, ``confirmation.html`` для уменьшения дублирования кода и рассредоточения логики в разных шаблонах с расширением (наследованием). Все эти шаблоны наследуют от базового шаблона ``base.html``, коотрый содержит каркас HTML-страницы с блоками включений, содержимое которых может меняться в дочерних шаблонах.

Версия 2.1
==========
.. only:: adm

  Работа со структурой проекта.

.. only:: dev

  Непустые модули приложений (``admin``, ``models``, ``views``) преобразованы в пакеты.

Версия 2.0
==========
.. only:: adm

  Добавлена возможность работы со сторонними сервисами:

  * сервисы продажи билетов (СПБ).
  * сервисы онлайн-оплаты (СОО).

  **Схемы залов** импортируются из конкретного СПБ при выполнении задания на импорт информации из СПБ. В разделе "**Залы (места проведения событий)** находятся добавляемые вручную залы, к которым должны быть привязаны импортированные ранее схемы залов. Только после привязки схемы зала к залу при следующем звапуске задания на импорт будут импортированы связанные с этой схемой события.

.. only:: dev

  Добавлен пакет ``third_party`` для работы со сторонними сервисами. Он содержит 2 приложения:

  * ``ticket_service`` - сервисы продажи билетов (СПБ).
  * ``payment_service`` - сервисы онлайн-оплаты (СОО).

  Работа со сторонними сервисами осуществляется на основе абстрактного базового класса и наследующих ему классов конкретных сторонних сервисов в соответствии с шаблоном проектирования "*Адаптер*" (и отчасти "*Стратегия*").

  **Схемы залов** импортируются из конкретного СПБ в модель ``ticket_service.TicketServiceSchemeVenueBinder`` при выполнении задания ``ts_discover``. В модели ``event.EventVenue`` находятся **залы**, по сути - это *места проведения событий*, которые могут содержать в себе разные площадки для проведения событий с разными схемами залов.

  Для того, чтобы импортировать события с какой-либо схемой зала в базу данных сайта, эту схему зала необходимо предварительно привязать к её залу, добавленному в БД сайте ранее.

**********
Версии 1.x
**********
.. only:: dev

  Первоначальный функционал (пока без возможности продажи билетов).

Версия 1.1
==========
.. only:: adm

  Правильная работа с датой/временем. Любой атрибут даты/времени (дата/время события или дата/время создания заказа покупателем) **хранится в нулевом часовом поясе** в базе данных сайта (*UTC*), а **выводится с учётом часового пояса** конкретного города, к которому привязан сайт (на сайте или в админ-панели).

.. only:: dev

  Дата/время какой-либо сайтозависимой модели в ``DateTimeField``:

  * сохраняется в базу данных в нулевом часовом поясе (*UTC*);
  * выводится в часовом поясе связанного с этой моделью сайта (через его связь с городом).

.. only:: adm

  Группы и события хоранятся в одном разделе админ-панели и отличаются друг от друга логическим атрибутом **Группа** (флажок "да"/"нет"). На сайте выводятся как события (с прямой ссылкой на себя), так и группы (со ссылкой на самое первое опубликованное актуальное событие в группе).

.. only:: dev

  Группы и события находятся в одной модели ``event.Event`` и различаются булевым полем ``is_group``. События в группе добавляются в дочернюю M2M-модель ``event.EventGroupBinder``.

.. only:: adm

  Добавлен календарь для фильтрации событий по дате. Можно перемещаться между месяцами, при клике на дату в текущем месяце выводятся события или группы на эту дату (если они имеются) либо сообщение об их отсутствии.

.. only:: dev

  Календарь календарь для фильтрации событий по дате на основе JS-плагина ``fullcalendar``.

  Коррективы моделей ``event.EventContainerBinder``, ``event.EventLinkBinder``.

  В модель ``location.City`` добавлен вывод человекопонятной разницы во времени с ``UTC``.

  JS-скрипты с главной страницы вынесены в отдельные шаблоны ``bottom_scripts.html`` и ``counters.html``.

Версия 1.0
==========
Базовый функционал без билетных и оплатных сервисов, пока только с внешними ссылками на другие сайты по продаже билетов.
