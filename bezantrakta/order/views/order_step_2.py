import uuid
from collections import OrderedDict

from django.conf import settings
from django.shortcuts import redirect, render
from django.urls import reverse

from project.cache import cache_factory
from project.shortcuts import build_absolute_url, message, render_messages

from bezantrakta.order.order_basket import OrderBasket
from bezantrakta.order.settings import ORDER_TYPE


def order_step_2(request):
    """–í–≤–µ–¥–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –∏ –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞–∫–∞–∑–∞."""
    # UUID —Å–æ–±—ã—Ç–∏—è
    event_uuid = request.COOKIES.get('bezantrakta_event_uuid', None)
    try:
        event_uuid = uuid.UUID(event_uuid)
    except (TypeError, ValueError):
        redirect('/')

    # UUID –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–∞
    order_uuid = request.COOKIES.get('bezantrakta_order_uuid', None)
    try:
        order_uuid = uuid.UUID(order_uuid)
    except (TypeError, ValueError):
        redirect('/')

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—ã—Ç–∏–∏ –∏–∑ –∫—ç—à–∞
    event = cache_factory('event', event_uuid)
    if not event:
        redirect('/')

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∞–π—Ç–∞
    domain = cache_factory('domain', request.domain_slug)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
    ticket_service = cache_factory('ticket_service', event['ticket_service_id'])

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã
    payment_service = cache_factory('payment_service', event['payment_service_id'])

    # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞–∫–∞–∑–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö,
    # –µ—Å–ª–∏ –∑–∞–∫–∞–∑–æ–≤ —Ä–∞–Ω–µ–µ –Ω–µ –±—ã–ª–æ –∏–ª–∏ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ —Ç–∏–ø –∑–∞–∫–∞–∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–∫–∞–∑–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞ (–µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–¥–µ–ª–∞–Ω —Ä–∞–Ω–µ–µ)
    order_type = request.COOKIES.get('bezantrakta_customer_order_type', None)
    default_order_type = None

    # –í—Å–µ —Ç–∏–ø—ã –∑–∞–∫–∞–∑–∞ –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –∏ –≤ —Å–æ–±—ã—Ç–∏–∏)
    order_types = OrderedDict()
    for ot in ORDER_TYPE:
        order_types.update(
            {
                ot: {
                    'ticket_service': ticket_service['settings']['order'][ot],
                    'event':                   event['settings']['order'][ot],
                }
            }
        )

    # –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–∫–∞–∑–∞ –±–∏–ª–µ—Ç–æ–≤ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏
    order_types_active = tuple(
        ot for ot in order_types.keys() if
        order_types[ot]['ticket_service'] is True and order_types[ot]['event'] is True and
        (payment_service or not ot.endswith('_online'))
    )
    # –¢–∏–ø—ã –∑–∞–∫–∞–∑–∞ –±–∏–ª–µ—Ç–æ–≤ —Å –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–æ–π –ù–ï –≤–∫–ª—é—á–∞—é—Ç—Å—è –≤ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö,
    # –µ—Å–ª–∏ –∫ —Ç–µ–∫—É—â–µ–º—É —Å–µ—Ä–≤–∏—Å—É –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –ù–ï –ø—Ä–∏–≤—è–∑–∞–Ω –Ω–∏–∫–∞–∫–æ–π —Å–µ—Ä–≤–∏—Å –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã

    # –í—ã–±–æ—Ä –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Ç–∏–ø–∞ –∑–∞–∫–∞–∑–∞ –ø–æ –ø–æ—Ä—è–¥–∫—É,
    # –µ—Å–ª–∏ –æ–Ω –ù–ï –±—ã–ª –≤—ã–±—Ä–∞–Ω —Ä–∞–Ω–µ–µ –∏–ª–∏ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ —Ç–∏–ø –∑–∞–∫–∞–∑–∞ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–±—ã—Ç–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω
    if not order_type or order_type not in order_types_active:
        for ot in order_types.keys():
            if ot in order_types_active:
                default_order_type = ot
                break
    else:
        default_order_type = order_type

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–∞
    basket = OrderBasket(order_uuid=order_uuid)
    order = basket.order

    if not order:
        redirect('/')

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —à–∞–±–ª–æ–Ω–µ
    context = {}

    context['domain'] = domain

    context['event_uuid'] = event_uuid

    context['event'] = event
    context['ticket_service'] = ticket_service
    context['payment_service'] = payment_service

    context['order'] = order
    context['default_order_type'] = default_order_type
    context['form_action'] = build_absolute_url(request.domain_slug, reverse('order:order_processing'))

    # –†–∞–∑—Ä–µ—à—ë–Ω –ª–∏ –≤—ã–≤–æ–¥ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    cookie_debugger = request.COOKIES.get(settings.BEZANTRAKTA_COOKIE_WATCHER_TITLE, None)
    context['watcher'] = True if cookie_debugger == settings.BEZANTRAKTA_COOKIE_WATCHER_VALUE else False

    # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –∑–∞–∫–∞–∑–∞ –ø—É—Å—Ç–∞—è
    if order['tickets_count'] == 0:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        msgs = [
            message(
                'warning',
                '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –±–∏–ª–µ—Ç—ã –≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑–µ—Ä–≤ –ª–∏–±–æ –≤—Ä–µ–º—è –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç–µ–∫–ª–æ. üôÅ'
            ),
            message(
                'info',
                'üëâ <a href="{url}">–í—ã–±–∏—Ä–∞–π—Ç–µ –Ω—É–∂–Ω—ã–µ –í–∞–º –±–∏–ª–µ—Ç—ã –∏ –æ—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∑–∞–∫–∞–∑</a>.'.format(url=event['url'])
            ),
        ]
        render_messages(request, msgs)
        return redirect('error')
    # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –∑–∞–∫–∞–∑–∞ –ù–ï–ø—É—Å—Ç–∞—è
    else:
        return render(request, 'order/order_step_2.html', context)
