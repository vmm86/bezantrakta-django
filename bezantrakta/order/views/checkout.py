import simplejson as json
import uuid
from collections import OrderedDict

from django.shortcuts import redirect, render

from project.cache import cache_factory
from project.shortcuts import build_absolute_url, message, render_messages

from bezantrakta.order.settings import ORDER_TYPE


def checkout(request):
    """–í–≤–µ–¥–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –∏ –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞–∫–∞–∑–∞."""
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–æ–±—ã—Ç–∏—è –∏–∑ cookie
    event_uuid = request.COOKIES.get('bezantrakta_event_uuid', uuid.uuid4())
    event_id = int(request.COOKIES.get('bezantrakta_event_id', 0))

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—ã—Ç–∏–∏ –∏–∑ –∫—ç—à–∞
    event = cache_factory('event', event_uuid)
    if event is None:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        msgs = [
            message(
                'warning',
                '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–∞ –±–∏–ª–µ—Ç–æ–≤. üôÅ'
            ),
            message(
                'info',
                'üëâ <a href="/">–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>.'
            ),
        ]
        render_messages(request, msgs)
        return redirect('error')

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –∏ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
    ticket_service = cache_factory('ticket_service', event['ticket_service_id'])

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã
    payment_service = cache_factory('payment_service', event['payment_service_id'])
    # –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã
    ps = payment_service['instance']

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞ (–µ—Å–ª–∏ –æ–Ω –±—ã–ª)
    customer = {}
    customer['name'] = request.COOKIES.get('bezantrakta_customer_name', '')
    customer['phone'] = request.COOKIES.get('bezantrakta_customer_phone', '')
    customer['email'] = request.COOKIES.get('bezantrakta_customer_email', '')
    customer['address'] = request.COOKIES.get('bezantrakta_customer_address', request.city_title)
    customer['order_type'] = request.COOKIES.get('bezantrakta_customer_order_type', '')

    # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞–∫–∞–∑–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö,
    # –µ—Å–ª–∏ –∑–∞–∫–∞–∑–æ–≤ —Ä–∞–Ω–µ–µ –Ω–µ –±—ã–ª–æ –∏–ª–∏ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ —Ç–∏–ø –∑–∞–∫–∞–∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏

    # –í—Å–µ —Ç–∏–ø—ã –∑–∞–∫–∞–∑–∞ –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Å–µ—Ä–≤–∏—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –∏ –≤ —Å–æ–±—ã—Ç–∏–∏)
    order_types = OrderedDict()
    for ot in ORDER_TYPE:
        order_types.update(
            {
                ot: {
                    'ticket_service': ticket_service['settings']['order'][ot],
                    'event':                   event['settings']['order'][ot],
                }
            }
        )

    # –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–∫–∞–∑–∞ –±–∏–ª–µ—Ç–æ–≤ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏
    customer['order_types_active'] = tuple(
        ot for ot in order_types.keys() if
        order_types[ot]['ticket_service'] is True and order_types[ot]['event'] is True
    )
    # –í—ã–±–æ—Ä –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Ç–∏–ø–∞ –∑–∞–∫–∞–∑–∞ –ø–æ –ø–æ—Ä—è–¥–∫—É,
    # –µ—Å–ª–∏ –æ–Ω –ù–ï –±—ã–ª –≤—ã–±—Ä–∞–Ω —Ä–∞–Ω–µ–µ –∏–ª–∏ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ —Ç–∏–ø –∑–∞–∫–∞–∑–∞ –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–±—ã—Ç–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω
    if customer['order_type'] == '' or customer['order_type'] not in customer['order_types_active']:
        for ot in order_types.keys():
            if ot in customer['order_types_active']:
                customer['order_type'] = ot
                break

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–º —Ä–µ–∑–µ—Ä–≤–µ –∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ–ø—Ü–∏—è—Ö –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–∫–∞–∑–∞
    order = {}
    order['uuid'] = request.COOKIES.get('bezantrakta_order_uuid')
    order['tickets'] = json.loads(request.COOKIES.get('bezantrakta_order_tickets'))
    order['count'] = int(request.COOKIES.get('bezantrakta_order_count'))
    order['total'] = ps.decimal_price(request.COOKIES.get('bezantrakta_order_total'))

    # –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∫—É—Ä—å–µ—Ä–æ–º
    order['courier_price'] = ps.decimal_price(ticket_service['settings']['courier_price'])
    # –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏ —Å–µ—Ä–≤–∏—Å–∞ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã
    order['commission'] = ps.decimal_price(payment_service['settings']['init']['commission'])

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —à–∞–±–ª–æ–Ω–µ
    context = {}

    context['event_uuid'] = event_uuid
    context['event_id'] = event_id

    context['event'] = event
    context['ticket_service'] = ticket_service
    context['payment_service'] = payment_service

    context['customer'] = customer

    context['order'] = order

    context['checkout_form_action'] = build_absolute_url(request.domain_slug, '/afisha/order/')

    # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –∑–∞–∫–∞–∑–∞ –ø—É—Å—Ç–∞—è
    if order['count'] == 0:
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        msgs = [
            message(
                'warning',
                '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –±–∏–ª–µ—Ç—ã –≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑–µ—Ä–≤ –ª–∏–±–æ –≤—Ä–µ–º—è –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç–µ–∫–ª–æ. üôÅ'
            ),
            message(
                'info',
                'üëâ <a href="{url}">–í—ã–±–∏—Ä–∞–π—Ç–µ –Ω—É–∂–Ω—ã–µ –í–∞–º –±–∏–ª–µ—Ç—ã –∏ –æ—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∑–∞–∫–∞–∑</a>.'.format(url=event['url'])
            ),
        ]
        render_messages(request, msgs)
        return redirect('error')
    # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –∑–∞–∫–∞–∑–∞ –ù–ï–ø—É—Å—Ç–∞—è
    else:
        return render(request, 'order/checkout.html', context)
